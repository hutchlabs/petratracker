#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace petratracker.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Petra5")]
	public partial class MicrogenDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertAssociation(Association instance);
    partial void UpdateAssociation(Association instance);
    partial void DeleteAssociation(Association instance);
    partial void InsertfndDeal(fndDeal instance);
    partial void UpdatefndDeal(fndDeal instance);
    partial void DeletefndDeal(fndDeal instance);
    partial void InsertEntityContact(EntityContact instance);
    partial void UpdateEntityContact(EntityContact instance);
    partial void DeleteEntityContact(EntityContact instance);
    partial void InsertEntity(Entity instance);
    partial void UpdateEntity(Entity instance);
    partial void DeleteEntity(Entity instance);
    partial void InsertEntityClient(EntityClient instance);
    partial void UpdateEntityClient(EntityClient instance);
    partial void DeleteEntityClient(EntityClient instance);
    partial void InsertPurpose(Purpose instance);
    partial void UpdatePurpose(Purpose instance);
    partial void DeletePurpose(Purpose instance);
    #endregion
		
		public MicrogenDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MicrogenDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MicrogenDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MicrogenDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<cclv_AllEntity> cclv_AllEntities
		{
			get
			{
				return this.GetTable<cclv_AllEntity>();
			}
		}
		
		public System.Data.Linq.Table<Association> Associations
		{
			get
			{
				return this.GetTable<Association>();
			}
		}
		
		public System.Data.Linq.Table<fndDeal> fndDeals
		{
			get
			{
				return this.GetTable<fndDeal>();
			}
		}
		
		public System.Data.Linq.Table<EntityContact> EntityContacts
		{
			get
			{
				return this.GetTable<EntityContact>();
			}
		}
		
		public System.Data.Linq.Table<Entity> Entities
		{
			get
			{
				return this.GetTable<Entity>();
			}
		}
		
		public System.Data.Linq.Table<EntityClient> EntityClients
		{
			get
			{
				return this.GetTable<EntityClient>();
			}
		}
		
		public System.Data.Linq.Table<Purpose> Purposes
		{
			get
			{
				return this.GetTable<Purpose>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.cclv_AllEntities")]
	public partial class cclv_AllEntity
	{
		
		private int _EntityID;
		
		private string _EntityKey;
		
		private string _FullName;
		
		private string _RegistrationNumber;
		
		private string _ShortName;
		
		private int _EntityTypeID;
		
		private string _EntityTypeDesc;
		
		private System.Nullable<int> _EntitySubTypeID;
		
		private string _EntitySubTypeDesc;
		
		private int _StatusID;
		
		private string _StatusDesc;
		
		private int _StatusCategoryID;
		
		private string _StatusCategoryDesc;
		
		private System.Nullable<int> _SecurityUserID;
		
		private System.Nullable<int> _TeamID;
		
		private string _TeamDesc;
		
		private string _Description;
		
		private System.Nullable<int> _ManagingEntityID;
		
		public cclv_AllEntity()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntityID", DbType="Int NOT NULL")]
		public int EntityID
		{
			get
			{
				return this._EntityID;
			}
			set
			{
				if ((this._EntityID != value))
				{
					this._EntityID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntityKey", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string EntityKey
		{
			get
			{
				return this._EntityKey;
			}
			set
			{
				if ((this._EntityKey != value))
				{
					this._EntityKey = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FullName", DbType="NVarChar(255)")]
		public string FullName
		{
			get
			{
				return this._FullName;
			}
			set
			{
				if ((this._FullName != value))
				{
					this._FullName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegistrationNumber", DbType="VarChar(20)")]
		public string RegistrationNumber
		{
			get
			{
				return this._RegistrationNumber;
			}
			set
			{
				if ((this._RegistrationNumber != value))
				{
					this._RegistrationNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShortName", DbType="NVarChar(255)")]
		public string ShortName
		{
			get
			{
				return this._ShortName;
			}
			set
			{
				if ((this._ShortName != value))
				{
					this._ShortName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntityTypeID", DbType="Int NOT NULL")]
		public int EntityTypeID
		{
			get
			{
				return this._EntityTypeID;
			}
			set
			{
				if ((this._EntityTypeID != value))
				{
					this._EntityTypeID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntityTypeDesc", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string EntityTypeDesc
		{
			get
			{
				return this._EntityTypeDesc;
			}
			set
			{
				if ((this._EntityTypeDesc != value))
				{
					this._EntityTypeDesc = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntitySubTypeID", DbType="Int")]
		public System.Nullable<int> EntitySubTypeID
		{
			get
			{
				return this._EntitySubTypeID;
			}
			set
			{
				if ((this._EntitySubTypeID != value))
				{
					this._EntitySubTypeID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntitySubTypeDesc", DbType="NVarChar(50)")]
		public string EntitySubTypeDesc
		{
			get
			{
				return this._EntitySubTypeDesc;
			}
			set
			{
				if ((this._EntitySubTypeDesc != value))
				{
					this._EntitySubTypeDesc = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatusID", DbType="Int NOT NULL")]
		public int StatusID
		{
			get
			{
				return this._StatusID;
			}
			set
			{
				if ((this._StatusID != value))
				{
					this._StatusID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatusDesc", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string StatusDesc
		{
			get
			{
				return this._StatusDesc;
			}
			set
			{
				if ((this._StatusDesc != value))
				{
					this._StatusDesc = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatusCategoryID", DbType="Int NOT NULL")]
		public int StatusCategoryID
		{
			get
			{
				return this._StatusCategoryID;
			}
			set
			{
				if ((this._StatusCategoryID != value))
				{
					this._StatusCategoryID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatusCategoryDesc", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string StatusCategoryDesc
		{
			get
			{
				return this._StatusCategoryDesc;
			}
			set
			{
				if ((this._StatusCategoryDesc != value))
				{
					this._StatusCategoryDesc = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SecurityUserID", DbType="Int")]
		public System.Nullable<int> SecurityUserID
		{
			get
			{
				return this._SecurityUserID;
			}
			set
			{
				if ((this._SecurityUserID != value))
				{
					this._SecurityUserID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TeamID", DbType="Int")]
		public System.Nullable<int> TeamID
		{
			get
			{
				return this._TeamID;
			}
			set
			{
				if ((this._TeamID != value))
				{
					this._TeamID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TeamDesc", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TeamDesc
		{
			get
			{
				return this._TeamDesc;
			}
			set
			{
				if ((this._TeamDesc != value))
				{
					this._TeamDesc = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(255)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this._Description = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ManagingEntityID", DbType="Int")]
		public System.Nullable<int> ManagingEntityID
		{
			get
			{
				return this._ManagingEntityID;
			}
			set
			{
				if ((this._ManagingEntityID != value))
				{
					this._ManagingEntityID = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Association")]
	public partial class Association : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AssociationID;
		
		private int _SourceEntityID;
		
		private int _TargetEntityID;
		
		private int _RoleTypeID;
		
		private char _StatusID;
		
		private System.Nullable<int> _ParentID;
		
		private System.Nullable<System.DateTime> _StartDate;
		
		private System.Nullable<System.DateTime> _EndDate;
		
		private System.Nullable<decimal> _PercentageHeld;
		
		private System.Nullable<int> _DirectorAssociationID;
		
		private System.Nullable<int> _EntityBankID;
		
		private System.Nullable<int> _POAID;
		
		private string _Notes;
		
		private System.Nullable<System.DateTime> _CreatedOn;
		
		private string _CreatedBy;
		
		private System.Nullable<System.DateTime> _AmendedOn;
		
		private string _AmendedBy;
		
		private System.Data.Linq.Binary _TS;
		
		private bool _IsFirst;
		
		private System.Nullable<int> _PortfolioID;
		
		private EntitySet<Association> _Associations;
		
		private EntityRef<Association> _Association1;
		
		private EntityRef<Entity> _Entity;
		
		private EntityRef<Entity> _Entity1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAssociationIDChanging(int value);
    partial void OnAssociationIDChanged();
    partial void OnSourceEntityIDChanging(int value);
    partial void OnSourceEntityIDChanged();
    partial void OnTargetEntityIDChanging(int value);
    partial void OnTargetEntityIDChanged();
    partial void OnRoleTypeIDChanging(int value);
    partial void OnRoleTypeIDChanged();
    partial void OnStatusIDChanging(char value);
    partial void OnStatusIDChanged();
    partial void OnParentIDChanging(System.Nullable<int> value);
    partial void OnParentIDChanged();
    partial void OnStartDateChanging(System.Nullable<System.DateTime> value);
    partial void OnStartDateChanged();
    partial void OnEndDateChanging(System.Nullable<System.DateTime> value);
    partial void OnEndDateChanged();
    partial void OnPercentageHeldChanging(System.Nullable<decimal> value);
    partial void OnPercentageHeldChanged();
    partial void OnDirectorAssociationIDChanging(System.Nullable<int> value);
    partial void OnDirectorAssociationIDChanged();
    partial void OnEntityBankIDChanging(System.Nullable<int> value);
    partial void OnEntityBankIDChanged();
    partial void OnPOAIDChanging(System.Nullable<int> value);
    partial void OnPOAIDChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    partial void OnCreatedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedOnChanged();
    partial void OnCreatedByChanging(string value);
    partial void OnCreatedByChanged();
    partial void OnAmendedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnAmendedOnChanged();
    partial void OnAmendedByChanging(string value);
    partial void OnAmendedByChanged();
    partial void OnTSChanging(System.Data.Linq.Binary value);
    partial void OnTSChanged();
    partial void OnIsFirstChanging(bool value);
    partial void OnIsFirstChanged();
    partial void OnPortfolioIDChanging(System.Nullable<int> value);
    partial void OnPortfolioIDChanged();
    #endregion
		
		public Association()
		{
			this._Associations = new EntitySet<Association>(new Action<Association>(this.attach_Associations), new Action<Association>(this.detach_Associations));
			this._Association1 = default(EntityRef<Association>);
			this._Entity = default(EntityRef<Entity>);
			this._Entity1 = default(EntityRef<Entity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssociationID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public int AssociationID
		{
			get
			{
				return this._AssociationID;
			}
			set
			{
				if ((this._AssociationID != value))
				{
					this.OnAssociationIDChanging(value);
					this.SendPropertyChanging();
					this._AssociationID = value;
					this.SendPropertyChanged("AssociationID");
					this.OnAssociationIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SourceEntityID", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int SourceEntityID
		{
			get
			{
				return this._SourceEntityID;
			}
			set
			{
				if ((this._SourceEntityID != value))
				{
					if (this._Entity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSourceEntityIDChanging(value);
					this.SendPropertyChanging();
					this._SourceEntityID = value;
					this.SendPropertyChanged("SourceEntityID");
					this.OnSourceEntityIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TargetEntityID", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int TargetEntityID
		{
			get
			{
				return this._TargetEntityID;
			}
			set
			{
				if ((this._TargetEntityID != value))
				{
					if (this._Entity1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTargetEntityIDChanging(value);
					this.SendPropertyChanging();
					this._TargetEntityID = value;
					this.SendPropertyChanged("TargetEntityID");
					this.OnTargetEntityIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleTypeID", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int RoleTypeID
		{
			get
			{
				return this._RoleTypeID;
			}
			set
			{
				if ((this._RoleTypeID != value))
				{
					this.OnRoleTypeIDChanging(value);
					this.SendPropertyChanging();
					this._RoleTypeID = value;
					this.SendPropertyChanged("RoleTypeID");
					this.OnRoleTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatusID", DbType="Char(1) NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public char StatusID
		{
			get
			{
				return this._StatusID;
			}
			set
			{
				if ((this._StatusID != value))
				{
					this.OnStatusIDChanging(value);
					this.SendPropertyChanging();
					this._StatusID = value;
					this.SendPropertyChanged("StatusID");
					this.OnStatusIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentID", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> ParentID
		{
			get
			{
				return this._ParentID;
			}
			set
			{
				if ((this._ParentID != value))
				{
					if (this._Association1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnParentIDChanging(value);
					this.SendPropertyChanging();
					this._ParentID = value;
					this.SendPropertyChanged("ParentID");
					this.OnParentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDate", DbType="DateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this.OnStartDateChanging(value);
					this.SendPropertyChanging();
					this._StartDate = value;
					this.SendPropertyChanged("StartDate");
					this.OnStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndDate", DbType="DateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> EndDate
		{
			get
			{
				return this._EndDate;
			}
			set
			{
				if ((this._EndDate != value))
				{
					this.OnEndDateChanging(value);
					this.SendPropertyChanging();
					this._EndDate = value;
					this.SendPropertyChanged("EndDate");
					this.OnEndDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PercentageHeld", DbType="Decimal(10,4)", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> PercentageHeld
		{
			get
			{
				return this._PercentageHeld;
			}
			set
			{
				if ((this._PercentageHeld != value))
				{
					this.OnPercentageHeldChanging(value);
					this.SendPropertyChanging();
					this._PercentageHeld = value;
					this.SendPropertyChanged("PercentageHeld");
					this.OnPercentageHeldChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DirectorAssociationID", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> DirectorAssociationID
		{
			get
			{
				return this._DirectorAssociationID;
			}
			set
			{
				if ((this._DirectorAssociationID != value))
				{
					this.OnDirectorAssociationIDChanging(value);
					this.SendPropertyChanging();
					this._DirectorAssociationID = value;
					this.SendPropertyChanged("DirectorAssociationID");
					this.OnDirectorAssociationIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntityBankID", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> EntityBankID
		{
			get
			{
				return this._EntityBankID;
			}
			set
			{
				if ((this._EntityBankID != value))
				{
					this.OnEntityBankIDChanging(value);
					this.SendPropertyChanging();
					this._EntityBankID = value;
					this.SendPropertyChanged("EntityBankID");
					this.OnEntityBankIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_POAID", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> POAID
		{
			get
			{
				return this._POAID;
			}
			set
			{
				if ((this._POAID != value))
				{
					this.OnPOAIDChanging(value);
					this.SendPropertyChanging();
					this._POAID = value;
					this.SendPropertyChanged("POAID");
					this.OnPOAIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="VarChar(255)", UpdateCheck=UpdateCheck.Never)]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOn", DbType="DateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> CreatedOn
		{
			get
			{
				return this._CreatedOn;
			}
			set
			{
				if ((this._CreatedOn != value))
				{
					this.OnCreatedOnChanging(value);
					this.SendPropertyChanging();
					this._CreatedOn = value;
					this.SendPropertyChanged("CreatedOn");
					this.OnCreatedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="VarChar(30)", UpdateCheck=UpdateCheck.Never)]
		public string CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AmendedOn", DbType="DateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> AmendedOn
		{
			get
			{
				return this._AmendedOn;
			}
			set
			{
				if ((this._AmendedOn != value))
				{
					this.OnAmendedOnChanging(value);
					this.SendPropertyChanging();
					this._AmendedOn = value;
					this.SendPropertyChanged("AmendedOn");
					this.OnAmendedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AmendedBy", DbType="VarChar(30)", UpdateCheck=UpdateCheck.Never)]
		public string AmendedBy
		{
			get
			{
				return this._AmendedBy;
			}
			set
			{
				if ((this._AmendedBy != value))
				{
					this.OnAmendedByChanging(value);
					this.SendPropertyChanging();
					this._AmendedBy = value;
					this.SendPropertyChanged("AmendedBy");
					this.OnAmendedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TS", AutoSync=AutoSync.Always, DbType="rowversion", IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary TS
		{
			get
			{
				return this._TS;
			}
			set
			{
				if ((this._TS != value))
				{
					this.OnTSChanging(value);
					this.SendPropertyChanging();
					this._TS = value;
					this.SendPropertyChanged("TS");
					this.OnTSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsFirst", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool IsFirst
		{
			get
			{
				return this._IsFirst;
			}
			set
			{
				if ((this._IsFirst != value))
				{
					this.OnIsFirstChanging(value);
					this.SendPropertyChanging();
					this._IsFirst = value;
					this.SendPropertyChanged("IsFirst");
					this.OnIsFirstChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PortfolioID", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> PortfolioID
		{
			get
			{
				return this._PortfolioID;
			}
			set
			{
				if ((this._PortfolioID != value))
				{
					this.OnPortfolioIDChanging(value);
					this.SendPropertyChanging();
					this._PortfolioID = value;
					this.SendPropertyChanged("PortfolioID");
					this.OnPortfolioIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Association_Association", Storage="_Associations", ThisKey="AssociationID", OtherKey="ParentID")]
		public EntitySet<Association> Associations
		{
			get
			{
				return this._Associations;
			}
			set
			{
				this._Associations.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Association_Association", Storage="_Association1", ThisKey="ParentID", OtherKey="AssociationID", IsForeignKey=true)]
		public Association Association1
		{
			get
			{
				return this._Association1.Entity;
			}
			set
			{
				Association previousValue = this._Association1.Entity;
				if (((previousValue != value) 
							|| (this._Association1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Association1.Entity = null;
						previousValue.Associations.Remove(this);
					}
					this._Association1.Entity = value;
					if ((value != null))
					{
						value.Associations.Add(this);
						this._ParentID = value.AssociationID;
					}
					else
					{
						this._ParentID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Association1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Entity_Association", Storage="_Entity", ThisKey="SourceEntityID", OtherKey="EntityID", IsForeignKey=true)]
		public Entity Entity
		{
			get
			{
				return this._Entity.Entity;
			}
			set
			{
				Entity previousValue = this._Entity.Entity;
				if (((previousValue != value) 
							|| (this._Entity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Entity.Entity = null;
						previousValue.Associations.Remove(this);
					}
					this._Entity.Entity = value;
					if ((value != null))
					{
						value.Associations.Add(this);
						this._SourceEntityID = value.EntityID;
					}
					else
					{
						this._SourceEntityID = default(int);
					}
					this.SendPropertyChanged("Entity");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Entity_Association1", Storage="_Entity1", ThisKey="TargetEntityID", OtherKey="EntityID", IsForeignKey=true)]
		public Entity Entity1
		{
			get
			{
				return this._Entity1.Entity;
			}
			set
			{
				Entity previousValue = this._Entity1.Entity;
				if (((previousValue != value) 
							|| (this._Entity1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Entity1.Entity = null;
						previousValue.Associations1.Remove(this);
					}
					this._Entity1.Entity = value;
					if ((value != null))
					{
						value.Associations1.Add(this);
						this._TargetEntityID = value.EntityID;
					}
					else
					{
						this._TargetEntityID = default(int);
					}
					this.SendPropertyChanged("Entity1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Associations(Association entity)
		{
			this.SendPropertyChanging();
			entity.Association1 = this;
		}
		
		private void detach_Associations(Association entity)
		{
			this.SendPropertyChanging();
			entity.Association1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.fndDeal")]
	public partial class fndDeal : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DealID;
		
		private string _DealReference;
		
		private string _DealReferenceSuffix;
		
		private int _DealTypeID;
		
		private string _OrderReference;
		
		private System.Nullable<int> _ProductID;
		
		private System.Nullable<int> _WrapperEntityFundID;
		
		private bool _VoidWrapper;
		
		private System.Nullable<int> _EntityFundID;
		
		private int _FundHolderID;
		
		private bool _CancellationStatus;
		
		private char _Certificated;
		
		private System.DateTime _DealingDate;
		
		private System.Nullable<System.DateTime> _ValueDate;
		
		private System.DateTime _BookedDate;
		
		private System.Nullable<System.DateTime> _PriceDate;
		
		private System.Nullable<int> _DealingCurrencyID;
		
		private System.Nullable<decimal> _NAVPrice;
		
		private System.Nullable<decimal> _QuotedPrice;
		
		private System.Nullable<decimal> _DealingPrice;
		
		private System.Nullable<bool> _DilutionLevyApplied;
		
		private System.Nullable<decimal> _DilutionLevy;
		
		private System.Nullable<int> _PaymentCurrencyID;
		
		private string _ExchangeRateBasis;
		
		private System.Nullable<decimal> _ExchangeRate;
		
		private string _DealBasis;
		
		private System.Nullable<decimal> _PaymentAmountDealCcy;
		
		private System.Nullable<decimal> _PaymentAmountPayCcy;
		
		private System.Nullable<decimal> _Group1Units;
		
		private System.Nullable<decimal> _Group2Units;
		
		private System.Nullable<decimal> _AmountThisYearDealCcy;
		
		private System.Nullable<decimal> _AmountThisYearPayCcy;
		
		private System.Nullable<decimal> _DealingAmountDealCcy;
		
		private System.Nullable<decimal> _DealingAmountPayCcy;
		
		private string _FrontEndFeeModified;
		
		private System.Nullable<decimal> _FrontEndFeeRate;
		
		private System.Nullable<decimal> _FrontEndFeeDealCcy;
		
		private System.Nullable<decimal> _FrontEndFeePayCcy;
		
		private string _DiscountModified;
		
		private System.Nullable<decimal> _DiscountRate;
		
		private System.Nullable<decimal> _DiscountDealCcy;
		
		private System.Nullable<decimal> _DiscountPayCcy;
		
		private string _ExitFeeModified;
		
		private System.Nullable<decimal> _ExitFeeRate;
		
		private System.Nullable<decimal> _ExitFeeDealCcy;
		
		private System.Nullable<decimal> _ExitFeePayCcy;
		
		private System.Nullable<decimal> _CommissionRate;
		
		private System.Nullable<decimal> _CommissionDealCcy;
		
		private System.Nullable<decimal> _CommissionPayCcy;
		
		private System.Nullable<int> _SourceOfBusinessID;
		
		private System.Nullable<int> _AdvertID;
		
		private string _SettlementBasis;
		
		private System.Nullable<decimal> _SettlementAmountPayCcy;
		
		private System.Nullable<decimal> _OutstandingSettlementPayCcy;
		
		private System.Nullable<bool> _Renunciation;
		
		private System.Nullable<int> _DealStatusID;
		
		private System.Nullable<int> _CancellingDealID;
		
		private System.Nullable<int> _RejectReasonID;
		
		private string _PrintStatus;
		
		private System.Nullable<int> _NumberReprints;
		
		private System.Nullable<int> _DealSlipOriginID;
		
		private System.Nullable<int> _FundHolderPlanProductID;
		
		private System.Nullable<int> _PaymentID;
		
		private string _InternalNotes;
		
		private string _ExternalNotes;
		
		private bool _HasBeneficialOwnershipChange;
		
		private System.Nullable<int> _BeneficialOwnershipCurrencyID;
		
		private System.Nullable<decimal> _BeneficialOwnershipAmount;
		
		private System.Nullable<int> _ContractEnclosureID;
		
		private System.Nullable<int> _UnitRounding;
		
		private System.Nullable<decimal> _PreRoundedUnits;
		
		private System.Nullable<decimal> _PreRoundedAmount;
		
		private System.Nullable<System.DateTime> _FullySettledDealingDate;
		
		private System.Nullable<System.DateTime> _AmendDate;
		
		private System.Nullable<int> _AmendedDealID;
		
		private System.Nullable<int> _VersionNumber;
		
		private bool _DealAtNAV;
		
		private string _SetUpFeeModified;
		
		private System.Nullable<decimal> _SetUpFeeRate;
		
		private System.Nullable<decimal> _SetUpFeeDealCcy;
		
		private System.Nullable<decimal> _SetUpFeePayCcy;
		
		private System.Data.Linq.Binary _TS;
		
		private System.Nullable<bool> _PotentialDilutionLevy;
		
		private System.Nullable<System.DateTime> _FirstSubscriptionDate;
		
		private bool _AdvisedSale;
		
		private bool _CloseAccount;
		
		private System.Nullable<decimal> _DilutionLevyPayCcy;
		
		private System.Nullable<decimal> _DilutionLevyDealCcy;
		
		private bool _AdviserCharge;
		
		private System.Nullable<int> _FundHolderPlanID;
		
		private EntitySet<fndDeal> _fndDeals;
		
		private EntityRef<fndDeal> _fndDeal1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDealIDChanging(int value);
    partial void OnDealIDChanged();
    partial void OnDealReferenceChanging(string value);
    partial void OnDealReferenceChanged();
    partial void OnDealReferenceSuffixChanging(string value);
    partial void OnDealReferenceSuffixChanged();
    partial void OnDealTypeIDChanging(int value);
    partial void OnDealTypeIDChanged();
    partial void OnOrderReferenceChanging(string value);
    partial void OnOrderReferenceChanged();
    partial void OnProductIDChanging(System.Nullable<int> value);
    partial void OnProductIDChanged();
    partial void OnWrapperEntityFundIDChanging(System.Nullable<int> value);
    partial void OnWrapperEntityFundIDChanged();
    partial void OnVoidWrapperChanging(bool value);
    partial void OnVoidWrapperChanged();
    partial void OnEntityFundIDChanging(System.Nullable<int> value);
    partial void OnEntityFundIDChanged();
    partial void OnFundHolderIDChanging(int value);
    partial void OnFundHolderIDChanged();
    partial void OnCancellationStatusChanging(bool value);
    partial void OnCancellationStatusChanged();
    partial void OnCertificatedChanging(char value);
    partial void OnCertificatedChanged();
    partial void OnDealingDateChanging(System.DateTime value);
    partial void OnDealingDateChanged();
    partial void OnValueDateChanging(System.Nullable<System.DateTime> value);
    partial void OnValueDateChanged();
    partial void OnBookedDateChanging(System.DateTime value);
    partial void OnBookedDateChanged();
    partial void OnPriceDateChanging(System.Nullable<System.DateTime> value);
    partial void OnPriceDateChanged();
    partial void OnDealingCurrencyIDChanging(System.Nullable<int> value);
    partial void OnDealingCurrencyIDChanged();
    partial void OnNAVPriceChanging(System.Nullable<decimal> value);
    partial void OnNAVPriceChanged();
    partial void OnQuotedPriceChanging(System.Nullable<decimal> value);
    partial void OnQuotedPriceChanged();
    partial void OnDealingPriceChanging(System.Nullable<decimal> value);
    partial void OnDealingPriceChanged();
    partial void OnDilutionLevyAppliedChanging(System.Nullable<bool> value);
    partial void OnDilutionLevyAppliedChanged();
    partial void OnDilutionLevyChanging(System.Nullable<decimal> value);
    partial void OnDilutionLevyChanged();
    partial void OnPaymentCurrencyIDChanging(System.Nullable<int> value);
    partial void OnPaymentCurrencyIDChanged();
    partial void OnExchangeRateBasisChanging(string value);
    partial void OnExchangeRateBasisChanged();
    partial void OnExchangeRateChanging(System.Nullable<decimal> value);
    partial void OnExchangeRateChanged();
    partial void OnDealBasisChanging(string value);
    partial void OnDealBasisChanged();
    partial void OnPaymentAmountDealCcyChanging(System.Nullable<decimal> value);
    partial void OnPaymentAmountDealCcyChanged();
    partial void OnPaymentAmountPayCcyChanging(System.Nullable<decimal> value);
    partial void OnPaymentAmountPayCcyChanged();
    partial void OnGroup1UnitsChanging(System.Nullable<decimal> value);
    partial void OnGroup1UnitsChanged();
    partial void OnGroup2UnitsChanging(System.Nullable<decimal> value);
    partial void OnGroup2UnitsChanged();
    partial void OnAmountThisYearDealCcyChanging(System.Nullable<decimal> value);
    partial void OnAmountThisYearDealCcyChanged();
    partial void OnAmountThisYearPayCcyChanging(System.Nullable<decimal> value);
    partial void OnAmountThisYearPayCcyChanged();
    partial void OnDealingAmountDealCcyChanging(System.Nullable<decimal> value);
    partial void OnDealingAmountDealCcyChanged();
    partial void OnDealingAmountPayCcyChanging(System.Nullable<decimal> value);
    partial void OnDealingAmountPayCcyChanged();
    partial void OnFrontEndFeeModifiedChanging(string value);
    partial void OnFrontEndFeeModifiedChanged();
    partial void OnFrontEndFeeRateChanging(System.Nullable<decimal> value);
    partial void OnFrontEndFeeRateChanged();
    partial void OnFrontEndFeeDealCcyChanging(System.Nullable<decimal> value);
    partial void OnFrontEndFeeDealCcyChanged();
    partial void OnFrontEndFeePayCcyChanging(System.Nullable<decimal> value);
    partial void OnFrontEndFeePayCcyChanged();
    partial void OnDiscountModifiedChanging(string value);
    partial void OnDiscountModifiedChanged();
    partial void OnDiscountRateChanging(System.Nullable<decimal> value);
    partial void OnDiscountRateChanged();
    partial void OnDiscountDealCcyChanging(System.Nullable<decimal> value);
    partial void OnDiscountDealCcyChanged();
    partial void OnDiscountPayCcyChanging(System.Nullable<decimal> value);
    partial void OnDiscountPayCcyChanged();
    partial void OnExitFeeModifiedChanging(string value);
    partial void OnExitFeeModifiedChanged();
    partial void OnExitFeeRateChanging(System.Nullable<decimal> value);
    partial void OnExitFeeRateChanged();
    partial void OnExitFeeDealCcyChanging(System.Nullable<decimal> value);
    partial void OnExitFeeDealCcyChanged();
    partial void OnExitFeePayCcyChanging(System.Nullable<decimal> value);
    partial void OnExitFeePayCcyChanged();
    partial void OnCommissionRateChanging(System.Nullable<decimal> value);
    partial void OnCommissionRateChanged();
    partial void OnCommissionDealCcyChanging(System.Nullable<decimal> value);
    partial void OnCommissionDealCcyChanged();
    partial void OnCommissionPayCcyChanging(System.Nullable<decimal> value);
    partial void OnCommissionPayCcyChanged();
    partial void OnSourceOfBusinessIDChanging(System.Nullable<int> value);
    partial void OnSourceOfBusinessIDChanged();
    partial void OnAdvertIDChanging(System.Nullable<int> value);
    partial void OnAdvertIDChanged();
    partial void OnSettlementBasisChanging(string value);
    partial void OnSettlementBasisChanged();
    partial void OnSettlementAmountPayCcyChanging(System.Nullable<decimal> value);
    partial void OnSettlementAmountPayCcyChanged();
    partial void OnOutstandingSettlementPayCcyChanging(System.Nullable<decimal> value);
    partial void OnOutstandingSettlementPayCcyChanged();
    partial void OnRenunciationChanging(System.Nullable<bool> value);
    partial void OnRenunciationChanged();
    partial void OnDealStatusIDChanging(System.Nullable<int> value);
    partial void OnDealStatusIDChanged();
    partial void OnCancellingDealIDChanging(System.Nullable<int> value);
    partial void OnCancellingDealIDChanged();
    partial void OnRejectReasonIDChanging(System.Nullable<int> value);
    partial void OnRejectReasonIDChanged();
    partial void OnPrintStatusChanging(string value);
    partial void OnPrintStatusChanged();
    partial void OnNumberReprintsChanging(System.Nullable<int> value);
    partial void OnNumberReprintsChanged();
    partial void OnDealSlipOriginIDChanging(System.Nullable<int> value);
    partial void OnDealSlipOriginIDChanged();
    partial void OnFundHolderPlanProductIDChanging(System.Nullable<int> value);
    partial void OnFundHolderPlanProductIDChanged();
    partial void OnPaymentIDChanging(System.Nullable<int> value);
    partial void OnPaymentIDChanged();
    partial void OnInternalNotesChanging(string value);
    partial void OnInternalNotesChanged();
    partial void OnExternalNotesChanging(string value);
    partial void OnExternalNotesChanged();
    partial void OnHasBeneficialOwnershipChangeChanging(bool value);
    partial void OnHasBeneficialOwnershipChangeChanged();
    partial void OnBeneficialOwnershipCurrencyIDChanging(System.Nullable<int> value);
    partial void OnBeneficialOwnershipCurrencyIDChanged();
    partial void OnBeneficialOwnershipAmountChanging(System.Nullable<decimal> value);
    partial void OnBeneficialOwnershipAmountChanged();
    partial void OnContractEnclosureIDChanging(System.Nullable<int> value);
    partial void OnContractEnclosureIDChanged();
    partial void OnUnitRoundingChanging(System.Nullable<int> value);
    partial void OnUnitRoundingChanged();
    partial void OnPreRoundedUnitsChanging(System.Nullable<decimal> value);
    partial void OnPreRoundedUnitsChanged();
    partial void OnPreRoundedAmountChanging(System.Nullable<decimal> value);
    partial void OnPreRoundedAmountChanged();
    partial void OnFullySettledDealingDateChanging(System.Nullable<System.DateTime> value);
    partial void OnFullySettledDealingDateChanged();
    partial void OnAmendDateChanging(System.Nullable<System.DateTime> value);
    partial void OnAmendDateChanged();
    partial void OnAmendedDealIDChanging(System.Nullable<int> value);
    partial void OnAmendedDealIDChanged();
    partial void OnVersionNumberChanging(System.Nullable<int> value);
    partial void OnVersionNumberChanged();
    partial void OnDealAtNAVChanging(bool value);
    partial void OnDealAtNAVChanged();
    partial void OnSetUpFeeModifiedChanging(string value);
    partial void OnSetUpFeeModifiedChanged();
    partial void OnSetUpFeeRateChanging(System.Nullable<decimal> value);
    partial void OnSetUpFeeRateChanged();
    partial void OnSetUpFeeDealCcyChanging(System.Nullable<decimal> value);
    partial void OnSetUpFeeDealCcyChanged();
    partial void OnSetUpFeePayCcyChanging(System.Nullable<decimal> value);
    partial void OnSetUpFeePayCcyChanged();
    partial void OnTSChanging(System.Data.Linq.Binary value);
    partial void OnTSChanged();
    partial void OnPotentialDilutionLevyChanging(System.Nullable<bool> value);
    partial void OnPotentialDilutionLevyChanged();
    partial void OnFirstSubscriptionDateChanging(System.Nullable<System.DateTime> value);
    partial void OnFirstSubscriptionDateChanged();
    partial void OnAdvisedSaleChanging(bool value);
    partial void OnAdvisedSaleChanged();
    partial void OnCloseAccountChanging(bool value);
    partial void OnCloseAccountChanged();
    partial void OnDilutionLevyPayCcyChanging(System.Nullable<decimal> value);
    partial void OnDilutionLevyPayCcyChanged();
    partial void OnDilutionLevyDealCcyChanging(System.Nullable<decimal> value);
    partial void OnDilutionLevyDealCcyChanged();
    partial void OnAdviserChargeChanging(bool value);
    partial void OnAdviserChargeChanged();
    partial void OnFundHolderPlanIDChanging(System.Nullable<int> value);
    partial void OnFundHolderPlanIDChanged();
    #endregion
		
		public fndDeal()
		{
			this._fndDeals = new EntitySet<fndDeal>(new Action<fndDeal>(this.attach_fndDeals), new Action<fndDeal>(this.detach_fndDeals));
			this._fndDeal1 = default(EntityRef<fndDeal>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DealID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public int DealID
		{
			get
			{
				return this._DealID;
			}
			set
			{
				if ((this._DealID != value))
				{
					this.OnDealIDChanging(value);
					this.SendPropertyChanging();
					this._DealID = value;
					this.SendPropertyChanged("DealID");
					this.OnDealIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DealReference", DbType="NVarChar(20) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string DealReference
		{
			get
			{
				return this._DealReference;
			}
			set
			{
				if ((this._DealReference != value))
				{
					this.OnDealReferenceChanging(value);
					this.SendPropertyChanging();
					this._DealReference = value;
					this.SendPropertyChanged("DealReference");
					this.OnDealReferenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DealReferenceSuffix", DbType="NVarChar(3)", UpdateCheck=UpdateCheck.Never)]
		public string DealReferenceSuffix
		{
			get
			{
				return this._DealReferenceSuffix;
			}
			set
			{
				if ((this._DealReferenceSuffix != value))
				{
					this.OnDealReferenceSuffixChanging(value);
					this.SendPropertyChanging();
					this._DealReferenceSuffix = value;
					this.SendPropertyChanged("DealReferenceSuffix");
					this.OnDealReferenceSuffixChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DealTypeID", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int DealTypeID
		{
			get
			{
				return this._DealTypeID;
			}
			set
			{
				if ((this._DealTypeID != value))
				{
					this.OnDealTypeIDChanging(value);
					this.SendPropertyChanging();
					this._DealTypeID = value;
					this.SendPropertyChanged("DealTypeID");
					this.OnDealTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderReference", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string OrderReference
		{
			get
			{
				return this._OrderReference;
			}
			set
			{
				if ((this._OrderReference != value))
				{
					this.OnOrderReferenceChanging(value);
					this.SendPropertyChanging();
					this._OrderReference = value;
					this.SendPropertyChanged("OrderReference");
					this.OnOrderReferenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductID", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> ProductID
		{
			get
			{
				return this._ProductID;
			}
			set
			{
				if ((this._ProductID != value))
				{
					this.OnProductIDChanging(value);
					this.SendPropertyChanging();
					this._ProductID = value;
					this.SendPropertyChanged("ProductID");
					this.OnProductIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WrapperEntityFundID", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> WrapperEntityFundID
		{
			get
			{
				return this._WrapperEntityFundID;
			}
			set
			{
				if ((this._WrapperEntityFundID != value))
				{
					this.OnWrapperEntityFundIDChanging(value);
					this.SendPropertyChanging();
					this._WrapperEntityFundID = value;
					this.SendPropertyChanged("WrapperEntityFundID");
					this.OnWrapperEntityFundIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VoidWrapper", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool VoidWrapper
		{
			get
			{
				return this._VoidWrapper;
			}
			set
			{
				if ((this._VoidWrapper != value))
				{
					this.OnVoidWrapperChanging(value);
					this.SendPropertyChanging();
					this._VoidWrapper = value;
					this.SendPropertyChanged("VoidWrapper");
					this.OnVoidWrapperChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntityFundID", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> EntityFundID
		{
			get
			{
				return this._EntityFundID;
			}
			set
			{
				if ((this._EntityFundID != value))
				{
					this.OnEntityFundIDChanging(value);
					this.SendPropertyChanging();
					this._EntityFundID = value;
					this.SendPropertyChanged("EntityFundID");
					this.OnEntityFundIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FundHolderID", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int FundHolderID
		{
			get
			{
				return this._FundHolderID;
			}
			set
			{
				if ((this._FundHolderID != value))
				{
					this.OnFundHolderIDChanging(value);
					this.SendPropertyChanging();
					this._FundHolderID = value;
					this.SendPropertyChanged("FundHolderID");
					this.OnFundHolderIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CancellationStatus", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool CancellationStatus
		{
			get
			{
				return this._CancellationStatus;
			}
			set
			{
				if ((this._CancellationStatus != value))
				{
					this.OnCancellationStatusChanging(value);
					this.SendPropertyChanging();
					this._CancellationStatus = value;
					this.SendPropertyChanged("CancellationStatus");
					this.OnCancellationStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Certificated", DbType="Char(1) NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public char Certificated
		{
			get
			{
				return this._Certificated;
			}
			set
			{
				if ((this._Certificated != value))
				{
					this.OnCertificatedChanging(value);
					this.SendPropertyChanging();
					this._Certificated = value;
					this.SendPropertyChanged("Certificated");
					this.OnCertificatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DealingDate", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime DealingDate
		{
			get
			{
				return this._DealingDate;
			}
			set
			{
				if ((this._DealingDate != value))
				{
					this.OnDealingDateChanging(value);
					this.SendPropertyChanging();
					this._DealingDate = value;
					this.SendPropertyChanged("DealingDate");
					this.OnDealingDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ValueDate", DbType="DateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> ValueDate
		{
			get
			{
				return this._ValueDate;
			}
			set
			{
				if ((this._ValueDate != value))
				{
					this.OnValueDateChanging(value);
					this.SendPropertyChanging();
					this._ValueDate = value;
					this.SendPropertyChanged("ValueDate");
					this.OnValueDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BookedDate", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime BookedDate
		{
			get
			{
				return this._BookedDate;
			}
			set
			{
				if ((this._BookedDate != value))
				{
					this.OnBookedDateChanging(value);
					this.SendPropertyChanging();
					this._BookedDate = value;
					this.SendPropertyChanged("BookedDate");
					this.OnBookedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriceDate", DbType="DateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> PriceDate
		{
			get
			{
				return this._PriceDate;
			}
			set
			{
				if ((this._PriceDate != value))
				{
					this.OnPriceDateChanging(value);
					this.SendPropertyChanging();
					this._PriceDate = value;
					this.SendPropertyChanged("PriceDate");
					this.OnPriceDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DealingCurrencyID", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> DealingCurrencyID
		{
			get
			{
				return this._DealingCurrencyID;
			}
			set
			{
				if ((this._DealingCurrencyID != value))
				{
					this.OnDealingCurrencyIDChanging(value);
					this.SendPropertyChanging();
					this._DealingCurrencyID = value;
					this.SendPropertyChanged("DealingCurrencyID");
					this.OnDealingCurrencyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NAVPrice", DbType="Decimal(19,6)", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> NAVPrice
		{
			get
			{
				return this._NAVPrice;
			}
			set
			{
				if ((this._NAVPrice != value))
				{
					this.OnNAVPriceChanging(value);
					this.SendPropertyChanging();
					this._NAVPrice = value;
					this.SendPropertyChanged("NAVPrice");
					this.OnNAVPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuotedPrice", DbType="Decimal(19,6)", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> QuotedPrice
		{
			get
			{
				return this._QuotedPrice;
			}
			set
			{
				if ((this._QuotedPrice != value))
				{
					this.OnQuotedPriceChanging(value);
					this.SendPropertyChanging();
					this._QuotedPrice = value;
					this.SendPropertyChanged("QuotedPrice");
					this.OnQuotedPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DealingPrice", DbType="Decimal(19,6)", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> DealingPrice
		{
			get
			{
				return this._DealingPrice;
			}
			set
			{
				if ((this._DealingPrice != value))
				{
					this.OnDealingPriceChanging(value);
					this.SendPropertyChanging();
					this._DealingPrice = value;
					this.SendPropertyChanged("DealingPrice");
					this.OnDealingPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DilutionLevyApplied", DbType="Bit", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<bool> DilutionLevyApplied
		{
			get
			{
				return this._DilutionLevyApplied;
			}
			set
			{
				if ((this._DilutionLevyApplied != value))
				{
					this.OnDilutionLevyAppliedChanging(value);
					this.SendPropertyChanging();
					this._DilutionLevyApplied = value;
					this.SendPropertyChanged("DilutionLevyApplied");
					this.OnDilutionLevyAppliedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DilutionLevy", DbType="Decimal(19,8)", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> DilutionLevy
		{
			get
			{
				return this._DilutionLevy;
			}
			set
			{
				if ((this._DilutionLevy != value))
				{
					this.OnDilutionLevyChanging(value);
					this.SendPropertyChanging();
					this._DilutionLevy = value;
					this.SendPropertyChanged("DilutionLevy");
					this.OnDilutionLevyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentCurrencyID", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> PaymentCurrencyID
		{
			get
			{
				return this._PaymentCurrencyID;
			}
			set
			{
				if ((this._PaymentCurrencyID != value))
				{
					this.OnPaymentCurrencyIDChanging(value);
					this.SendPropertyChanging();
					this._PaymentCurrencyID = value;
					this.SendPropertyChanged("PaymentCurrencyID");
					this.OnPaymentCurrencyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExchangeRateBasis", DbType="NVarChar(1)", UpdateCheck=UpdateCheck.Never)]
		public string ExchangeRateBasis
		{
			get
			{
				return this._ExchangeRateBasis;
			}
			set
			{
				if ((this._ExchangeRateBasis != value))
				{
					this.OnExchangeRateBasisChanging(value);
					this.SendPropertyChanging();
					this._ExchangeRateBasis = value;
					this.SendPropertyChanged("ExchangeRateBasis");
					this.OnExchangeRateBasisChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExchangeRate", DbType="Decimal(19,8)", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> ExchangeRate
		{
			get
			{
				return this._ExchangeRate;
			}
			set
			{
				if ((this._ExchangeRate != value))
				{
					this.OnExchangeRateChanging(value);
					this.SendPropertyChanging();
					this._ExchangeRate = value;
					this.SendPropertyChanged("ExchangeRate");
					this.OnExchangeRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DealBasis", DbType="NVarChar(1)", UpdateCheck=UpdateCheck.Never)]
		public string DealBasis
		{
			get
			{
				return this._DealBasis;
			}
			set
			{
				if ((this._DealBasis != value))
				{
					this.OnDealBasisChanging(value);
					this.SendPropertyChanging();
					this._DealBasis = value;
					this.SendPropertyChanged("DealBasis");
					this.OnDealBasisChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentAmountDealCcy", DbType="Decimal(19,4)", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> PaymentAmountDealCcy
		{
			get
			{
				return this._PaymentAmountDealCcy;
			}
			set
			{
				if ((this._PaymentAmountDealCcy != value))
				{
					this.OnPaymentAmountDealCcyChanging(value);
					this.SendPropertyChanging();
					this._PaymentAmountDealCcy = value;
					this.SendPropertyChanged("PaymentAmountDealCcy");
					this.OnPaymentAmountDealCcyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentAmountPayCcy", DbType="Decimal(19,4)", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> PaymentAmountPayCcy
		{
			get
			{
				return this._PaymentAmountPayCcy;
			}
			set
			{
				if ((this._PaymentAmountPayCcy != value))
				{
					this.OnPaymentAmountPayCcyChanging(value);
					this.SendPropertyChanging();
					this._PaymentAmountPayCcy = value;
					this.SendPropertyChanged("PaymentAmountPayCcy");
					this.OnPaymentAmountPayCcyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Group1Units", DbType="Decimal(19,6)", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> Group1Units
		{
			get
			{
				return this._Group1Units;
			}
			set
			{
				if ((this._Group1Units != value))
				{
					this.OnGroup1UnitsChanging(value);
					this.SendPropertyChanging();
					this._Group1Units = value;
					this.SendPropertyChanged("Group1Units");
					this.OnGroup1UnitsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Group2Units", DbType="Decimal(19,6)", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> Group2Units
		{
			get
			{
				return this._Group2Units;
			}
			set
			{
				if ((this._Group2Units != value))
				{
					this.OnGroup2UnitsChanging(value);
					this.SendPropertyChanging();
					this._Group2Units = value;
					this.SendPropertyChanged("Group2Units");
					this.OnGroup2UnitsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AmountThisYearDealCcy", DbType="Decimal(19,4)", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> AmountThisYearDealCcy
		{
			get
			{
				return this._AmountThisYearDealCcy;
			}
			set
			{
				if ((this._AmountThisYearDealCcy != value))
				{
					this.OnAmountThisYearDealCcyChanging(value);
					this.SendPropertyChanging();
					this._AmountThisYearDealCcy = value;
					this.SendPropertyChanged("AmountThisYearDealCcy");
					this.OnAmountThisYearDealCcyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AmountThisYearPayCcy", DbType="Decimal(19,4)", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> AmountThisYearPayCcy
		{
			get
			{
				return this._AmountThisYearPayCcy;
			}
			set
			{
				if ((this._AmountThisYearPayCcy != value))
				{
					this.OnAmountThisYearPayCcyChanging(value);
					this.SendPropertyChanging();
					this._AmountThisYearPayCcy = value;
					this.SendPropertyChanged("AmountThisYearPayCcy");
					this.OnAmountThisYearPayCcyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DealingAmountDealCcy", DbType="Decimal(19,4)", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> DealingAmountDealCcy
		{
			get
			{
				return this._DealingAmountDealCcy;
			}
			set
			{
				if ((this._DealingAmountDealCcy != value))
				{
					this.OnDealingAmountDealCcyChanging(value);
					this.SendPropertyChanging();
					this._DealingAmountDealCcy = value;
					this.SendPropertyChanged("DealingAmountDealCcy");
					this.OnDealingAmountDealCcyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DealingAmountPayCcy", DbType="Decimal(19,4)", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> DealingAmountPayCcy
		{
			get
			{
				return this._DealingAmountPayCcy;
			}
			set
			{
				if ((this._DealingAmountPayCcy != value))
				{
					this.OnDealingAmountPayCcyChanging(value);
					this.SendPropertyChanging();
					this._DealingAmountPayCcy = value;
					this.SendPropertyChanged("DealingAmountPayCcy");
					this.OnDealingAmountPayCcyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FrontEndFeeModified", DbType="NVarChar(1)", UpdateCheck=UpdateCheck.Never)]
		public string FrontEndFeeModified
		{
			get
			{
				return this._FrontEndFeeModified;
			}
			set
			{
				if ((this._FrontEndFeeModified != value))
				{
					this.OnFrontEndFeeModifiedChanging(value);
					this.SendPropertyChanging();
					this._FrontEndFeeModified = value;
					this.SendPropertyChanged("FrontEndFeeModified");
					this.OnFrontEndFeeModifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FrontEndFeeRate", DbType="Decimal(19,8)", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> FrontEndFeeRate
		{
			get
			{
				return this._FrontEndFeeRate;
			}
			set
			{
				if ((this._FrontEndFeeRate != value))
				{
					this.OnFrontEndFeeRateChanging(value);
					this.SendPropertyChanging();
					this._FrontEndFeeRate = value;
					this.SendPropertyChanged("FrontEndFeeRate");
					this.OnFrontEndFeeRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FrontEndFeeDealCcy", DbType="Decimal(19,4)", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> FrontEndFeeDealCcy
		{
			get
			{
				return this._FrontEndFeeDealCcy;
			}
			set
			{
				if ((this._FrontEndFeeDealCcy != value))
				{
					this.OnFrontEndFeeDealCcyChanging(value);
					this.SendPropertyChanging();
					this._FrontEndFeeDealCcy = value;
					this.SendPropertyChanged("FrontEndFeeDealCcy");
					this.OnFrontEndFeeDealCcyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FrontEndFeePayCcy", DbType="Decimal(19,4)", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> FrontEndFeePayCcy
		{
			get
			{
				return this._FrontEndFeePayCcy;
			}
			set
			{
				if ((this._FrontEndFeePayCcy != value))
				{
					this.OnFrontEndFeePayCcyChanging(value);
					this.SendPropertyChanging();
					this._FrontEndFeePayCcy = value;
					this.SendPropertyChanged("FrontEndFeePayCcy");
					this.OnFrontEndFeePayCcyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiscountModified", DbType="NVarChar(1)", UpdateCheck=UpdateCheck.Never)]
		public string DiscountModified
		{
			get
			{
				return this._DiscountModified;
			}
			set
			{
				if ((this._DiscountModified != value))
				{
					this.OnDiscountModifiedChanging(value);
					this.SendPropertyChanging();
					this._DiscountModified = value;
					this.SendPropertyChanged("DiscountModified");
					this.OnDiscountModifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiscountRate", DbType="Decimal(19,8)", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> DiscountRate
		{
			get
			{
				return this._DiscountRate;
			}
			set
			{
				if ((this._DiscountRate != value))
				{
					this.OnDiscountRateChanging(value);
					this.SendPropertyChanging();
					this._DiscountRate = value;
					this.SendPropertyChanged("DiscountRate");
					this.OnDiscountRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiscountDealCcy", DbType="Decimal(19,4)", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> DiscountDealCcy
		{
			get
			{
				return this._DiscountDealCcy;
			}
			set
			{
				if ((this._DiscountDealCcy != value))
				{
					this.OnDiscountDealCcyChanging(value);
					this.SendPropertyChanging();
					this._DiscountDealCcy = value;
					this.SendPropertyChanged("DiscountDealCcy");
					this.OnDiscountDealCcyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiscountPayCcy", DbType="Decimal(19,4)", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> DiscountPayCcy
		{
			get
			{
				return this._DiscountPayCcy;
			}
			set
			{
				if ((this._DiscountPayCcy != value))
				{
					this.OnDiscountPayCcyChanging(value);
					this.SendPropertyChanging();
					this._DiscountPayCcy = value;
					this.SendPropertyChanged("DiscountPayCcy");
					this.OnDiscountPayCcyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExitFeeModified", DbType="NVarChar(1)", UpdateCheck=UpdateCheck.Never)]
		public string ExitFeeModified
		{
			get
			{
				return this._ExitFeeModified;
			}
			set
			{
				if ((this._ExitFeeModified != value))
				{
					this.OnExitFeeModifiedChanging(value);
					this.SendPropertyChanging();
					this._ExitFeeModified = value;
					this.SendPropertyChanged("ExitFeeModified");
					this.OnExitFeeModifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExitFeeRate", DbType="Decimal(19,8)", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> ExitFeeRate
		{
			get
			{
				return this._ExitFeeRate;
			}
			set
			{
				if ((this._ExitFeeRate != value))
				{
					this.OnExitFeeRateChanging(value);
					this.SendPropertyChanging();
					this._ExitFeeRate = value;
					this.SendPropertyChanged("ExitFeeRate");
					this.OnExitFeeRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExitFeeDealCcy", DbType="Decimal(19,4)", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> ExitFeeDealCcy
		{
			get
			{
				return this._ExitFeeDealCcy;
			}
			set
			{
				if ((this._ExitFeeDealCcy != value))
				{
					this.OnExitFeeDealCcyChanging(value);
					this.SendPropertyChanging();
					this._ExitFeeDealCcy = value;
					this.SendPropertyChanged("ExitFeeDealCcy");
					this.OnExitFeeDealCcyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExitFeePayCcy", DbType="Decimal(19,4)", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> ExitFeePayCcy
		{
			get
			{
				return this._ExitFeePayCcy;
			}
			set
			{
				if ((this._ExitFeePayCcy != value))
				{
					this.OnExitFeePayCcyChanging(value);
					this.SendPropertyChanging();
					this._ExitFeePayCcy = value;
					this.SendPropertyChanged("ExitFeePayCcy");
					this.OnExitFeePayCcyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CommissionRate", DbType="Decimal(19,8)", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> CommissionRate
		{
			get
			{
				return this._CommissionRate;
			}
			set
			{
				if ((this._CommissionRate != value))
				{
					this.OnCommissionRateChanging(value);
					this.SendPropertyChanging();
					this._CommissionRate = value;
					this.SendPropertyChanged("CommissionRate");
					this.OnCommissionRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CommissionDealCcy", DbType="Decimal(19,4)", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> CommissionDealCcy
		{
			get
			{
				return this._CommissionDealCcy;
			}
			set
			{
				if ((this._CommissionDealCcy != value))
				{
					this.OnCommissionDealCcyChanging(value);
					this.SendPropertyChanging();
					this._CommissionDealCcy = value;
					this.SendPropertyChanged("CommissionDealCcy");
					this.OnCommissionDealCcyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CommissionPayCcy", DbType="Decimal(19,4)", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> CommissionPayCcy
		{
			get
			{
				return this._CommissionPayCcy;
			}
			set
			{
				if ((this._CommissionPayCcy != value))
				{
					this.OnCommissionPayCcyChanging(value);
					this.SendPropertyChanging();
					this._CommissionPayCcy = value;
					this.SendPropertyChanged("CommissionPayCcy");
					this.OnCommissionPayCcyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SourceOfBusinessID", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> SourceOfBusinessID
		{
			get
			{
				return this._SourceOfBusinessID;
			}
			set
			{
				if ((this._SourceOfBusinessID != value))
				{
					this.OnSourceOfBusinessIDChanging(value);
					this.SendPropertyChanging();
					this._SourceOfBusinessID = value;
					this.SendPropertyChanged("SourceOfBusinessID");
					this.OnSourceOfBusinessIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdvertID", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> AdvertID
		{
			get
			{
				return this._AdvertID;
			}
			set
			{
				if ((this._AdvertID != value))
				{
					this.OnAdvertIDChanging(value);
					this.SendPropertyChanging();
					this._AdvertID = value;
					this.SendPropertyChanged("AdvertID");
					this.OnAdvertIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SettlementBasis", DbType="NVarChar(1)", UpdateCheck=UpdateCheck.Never)]
		public string SettlementBasis
		{
			get
			{
				return this._SettlementBasis;
			}
			set
			{
				if ((this._SettlementBasis != value))
				{
					this.OnSettlementBasisChanging(value);
					this.SendPropertyChanging();
					this._SettlementBasis = value;
					this.SendPropertyChanged("SettlementBasis");
					this.OnSettlementBasisChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SettlementAmountPayCcy", DbType="Decimal(19,4)", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> SettlementAmountPayCcy
		{
			get
			{
				return this._SettlementAmountPayCcy;
			}
			set
			{
				if ((this._SettlementAmountPayCcy != value))
				{
					this.OnSettlementAmountPayCcyChanging(value);
					this.SendPropertyChanging();
					this._SettlementAmountPayCcy = value;
					this.SendPropertyChanged("SettlementAmountPayCcy");
					this.OnSettlementAmountPayCcyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OutstandingSettlementPayCcy", DbType="Decimal(19,4)", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> OutstandingSettlementPayCcy
		{
			get
			{
				return this._OutstandingSettlementPayCcy;
			}
			set
			{
				if ((this._OutstandingSettlementPayCcy != value))
				{
					this.OnOutstandingSettlementPayCcyChanging(value);
					this.SendPropertyChanging();
					this._OutstandingSettlementPayCcy = value;
					this.SendPropertyChanged("OutstandingSettlementPayCcy");
					this.OnOutstandingSettlementPayCcyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Renunciation", DbType="Bit", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<bool> Renunciation
		{
			get
			{
				return this._Renunciation;
			}
			set
			{
				if ((this._Renunciation != value))
				{
					this.OnRenunciationChanging(value);
					this.SendPropertyChanging();
					this._Renunciation = value;
					this.SendPropertyChanged("Renunciation");
					this.OnRenunciationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DealStatusID", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> DealStatusID
		{
			get
			{
				return this._DealStatusID;
			}
			set
			{
				if ((this._DealStatusID != value))
				{
					this.OnDealStatusIDChanging(value);
					this.SendPropertyChanging();
					this._DealStatusID = value;
					this.SendPropertyChanged("DealStatusID");
					this.OnDealStatusIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CancellingDealID", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> CancellingDealID
		{
			get
			{
				return this._CancellingDealID;
			}
			set
			{
				if ((this._CancellingDealID != value))
				{
					if (this._fndDeal1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCancellingDealIDChanging(value);
					this.SendPropertyChanging();
					this._CancellingDealID = value;
					this.SendPropertyChanged("CancellingDealID");
					this.OnCancellingDealIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RejectReasonID", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> RejectReasonID
		{
			get
			{
				return this._RejectReasonID;
			}
			set
			{
				if ((this._RejectReasonID != value))
				{
					this.OnRejectReasonIDChanging(value);
					this.SendPropertyChanging();
					this._RejectReasonID = value;
					this.SendPropertyChanged("RejectReasonID");
					this.OnRejectReasonIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrintStatus", DbType="NVarChar(20)", UpdateCheck=UpdateCheck.Never)]
		public string PrintStatus
		{
			get
			{
				return this._PrintStatus;
			}
			set
			{
				if ((this._PrintStatus != value))
				{
					this.OnPrintStatusChanging(value);
					this.SendPropertyChanging();
					this._PrintStatus = value;
					this.SendPropertyChanged("PrintStatus");
					this.OnPrintStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberReprints", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> NumberReprints
		{
			get
			{
				return this._NumberReprints;
			}
			set
			{
				if ((this._NumberReprints != value))
				{
					this.OnNumberReprintsChanging(value);
					this.SendPropertyChanging();
					this._NumberReprints = value;
					this.SendPropertyChanged("NumberReprints");
					this.OnNumberReprintsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DealSlipOriginID", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> DealSlipOriginID
		{
			get
			{
				return this._DealSlipOriginID;
			}
			set
			{
				if ((this._DealSlipOriginID != value))
				{
					this.OnDealSlipOriginIDChanging(value);
					this.SendPropertyChanging();
					this._DealSlipOriginID = value;
					this.SendPropertyChanged("DealSlipOriginID");
					this.OnDealSlipOriginIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FundHolderPlanProductID", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> FundHolderPlanProductID
		{
			get
			{
				return this._FundHolderPlanProductID;
			}
			set
			{
				if ((this._FundHolderPlanProductID != value))
				{
					this.OnFundHolderPlanProductIDChanging(value);
					this.SendPropertyChanging();
					this._FundHolderPlanProductID = value;
					this.SendPropertyChanged("FundHolderPlanProductID");
					this.OnFundHolderPlanProductIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentID", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> PaymentID
		{
			get
			{
				return this._PaymentID;
			}
			set
			{
				if ((this._PaymentID != value))
				{
					this.OnPaymentIDChanging(value);
					this.SendPropertyChanging();
					this._PaymentID = value;
					this.SendPropertyChanged("PaymentID");
					this.OnPaymentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InternalNotes", DbType="NVarChar(255)", UpdateCheck=UpdateCheck.Never)]
		public string InternalNotes
		{
			get
			{
				return this._InternalNotes;
			}
			set
			{
				if ((this._InternalNotes != value))
				{
					this.OnInternalNotesChanging(value);
					this.SendPropertyChanging();
					this._InternalNotes = value;
					this.SendPropertyChanged("InternalNotes");
					this.OnInternalNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExternalNotes", DbType="NVarChar(255)", UpdateCheck=UpdateCheck.Never)]
		public string ExternalNotes
		{
			get
			{
				return this._ExternalNotes;
			}
			set
			{
				if ((this._ExternalNotes != value))
				{
					this.OnExternalNotesChanging(value);
					this.SendPropertyChanging();
					this._ExternalNotes = value;
					this.SendPropertyChanged("ExternalNotes");
					this.OnExternalNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasBeneficialOwnershipChange", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool HasBeneficialOwnershipChange
		{
			get
			{
				return this._HasBeneficialOwnershipChange;
			}
			set
			{
				if ((this._HasBeneficialOwnershipChange != value))
				{
					this.OnHasBeneficialOwnershipChangeChanging(value);
					this.SendPropertyChanging();
					this._HasBeneficialOwnershipChange = value;
					this.SendPropertyChanged("HasBeneficialOwnershipChange");
					this.OnHasBeneficialOwnershipChangeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BeneficialOwnershipCurrencyID", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> BeneficialOwnershipCurrencyID
		{
			get
			{
				return this._BeneficialOwnershipCurrencyID;
			}
			set
			{
				if ((this._BeneficialOwnershipCurrencyID != value))
				{
					this.OnBeneficialOwnershipCurrencyIDChanging(value);
					this.SendPropertyChanging();
					this._BeneficialOwnershipCurrencyID = value;
					this.SendPropertyChanged("BeneficialOwnershipCurrencyID");
					this.OnBeneficialOwnershipCurrencyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BeneficialOwnershipAmount", DbType="Decimal(19,4)", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> BeneficialOwnershipAmount
		{
			get
			{
				return this._BeneficialOwnershipAmount;
			}
			set
			{
				if ((this._BeneficialOwnershipAmount != value))
				{
					this.OnBeneficialOwnershipAmountChanging(value);
					this.SendPropertyChanging();
					this._BeneficialOwnershipAmount = value;
					this.SendPropertyChanged("BeneficialOwnershipAmount");
					this.OnBeneficialOwnershipAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContractEnclosureID", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> ContractEnclosureID
		{
			get
			{
				return this._ContractEnclosureID;
			}
			set
			{
				if ((this._ContractEnclosureID != value))
				{
					this.OnContractEnclosureIDChanging(value);
					this.SendPropertyChanging();
					this._ContractEnclosureID = value;
					this.SendPropertyChanged("ContractEnclosureID");
					this.OnContractEnclosureIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitRounding", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> UnitRounding
		{
			get
			{
				return this._UnitRounding;
			}
			set
			{
				if ((this._UnitRounding != value))
				{
					this.OnUnitRoundingChanging(value);
					this.SendPropertyChanging();
					this._UnitRounding = value;
					this.SendPropertyChanged("UnitRounding");
					this.OnUnitRoundingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PreRoundedUnits", DbType="Decimal(19,6)", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> PreRoundedUnits
		{
			get
			{
				return this._PreRoundedUnits;
			}
			set
			{
				if ((this._PreRoundedUnits != value))
				{
					this.OnPreRoundedUnitsChanging(value);
					this.SendPropertyChanging();
					this._PreRoundedUnits = value;
					this.SendPropertyChanged("PreRoundedUnits");
					this.OnPreRoundedUnitsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PreRoundedAmount", DbType="Decimal(19,4)", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> PreRoundedAmount
		{
			get
			{
				return this._PreRoundedAmount;
			}
			set
			{
				if ((this._PreRoundedAmount != value))
				{
					this.OnPreRoundedAmountChanging(value);
					this.SendPropertyChanging();
					this._PreRoundedAmount = value;
					this.SendPropertyChanged("PreRoundedAmount");
					this.OnPreRoundedAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FullySettledDealingDate", DbType="DateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> FullySettledDealingDate
		{
			get
			{
				return this._FullySettledDealingDate;
			}
			set
			{
				if ((this._FullySettledDealingDate != value))
				{
					this.OnFullySettledDealingDateChanging(value);
					this.SendPropertyChanging();
					this._FullySettledDealingDate = value;
					this.SendPropertyChanged("FullySettledDealingDate");
					this.OnFullySettledDealingDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AmendDate", DbType="DateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> AmendDate
		{
			get
			{
				return this._AmendDate;
			}
			set
			{
				if ((this._AmendDate != value))
				{
					this.OnAmendDateChanging(value);
					this.SendPropertyChanging();
					this._AmendDate = value;
					this.SendPropertyChanged("AmendDate");
					this.OnAmendDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AmendedDealID", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> AmendedDealID
		{
			get
			{
				return this._AmendedDealID;
			}
			set
			{
				if ((this._AmendedDealID != value))
				{
					this.OnAmendedDealIDChanging(value);
					this.SendPropertyChanging();
					this._AmendedDealID = value;
					this.SendPropertyChanged("AmendedDealID");
					this.OnAmendedDealIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VersionNumber", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> VersionNumber
		{
			get
			{
				return this._VersionNumber;
			}
			set
			{
				if ((this._VersionNumber != value))
				{
					this.OnVersionNumberChanging(value);
					this.SendPropertyChanging();
					this._VersionNumber = value;
					this.SendPropertyChanged("VersionNumber");
					this.OnVersionNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DealAtNAV", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool DealAtNAV
		{
			get
			{
				return this._DealAtNAV;
			}
			set
			{
				if ((this._DealAtNAV != value))
				{
					this.OnDealAtNAVChanging(value);
					this.SendPropertyChanging();
					this._DealAtNAV = value;
					this.SendPropertyChanged("DealAtNAV");
					this.OnDealAtNAVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SetUpFeeModified", DbType="NVarChar(1)", UpdateCheck=UpdateCheck.Never)]
		public string SetUpFeeModified
		{
			get
			{
				return this._SetUpFeeModified;
			}
			set
			{
				if ((this._SetUpFeeModified != value))
				{
					this.OnSetUpFeeModifiedChanging(value);
					this.SendPropertyChanging();
					this._SetUpFeeModified = value;
					this.SendPropertyChanged("SetUpFeeModified");
					this.OnSetUpFeeModifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SetUpFeeRate", DbType="Decimal(19,8)", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> SetUpFeeRate
		{
			get
			{
				return this._SetUpFeeRate;
			}
			set
			{
				if ((this._SetUpFeeRate != value))
				{
					this.OnSetUpFeeRateChanging(value);
					this.SendPropertyChanging();
					this._SetUpFeeRate = value;
					this.SendPropertyChanged("SetUpFeeRate");
					this.OnSetUpFeeRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SetUpFeeDealCcy", DbType="Decimal(19,4)", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> SetUpFeeDealCcy
		{
			get
			{
				return this._SetUpFeeDealCcy;
			}
			set
			{
				if ((this._SetUpFeeDealCcy != value))
				{
					this.OnSetUpFeeDealCcyChanging(value);
					this.SendPropertyChanging();
					this._SetUpFeeDealCcy = value;
					this.SendPropertyChanged("SetUpFeeDealCcy");
					this.OnSetUpFeeDealCcyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SetUpFeePayCcy", DbType="Decimal(19,4)", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> SetUpFeePayCcy
		{
			get
			{
				return this._SetUpFeePayCcy;
			}
			set
			{
				if ((this._SetUpFeePayCcy != value))
				{
					this.OnSetUpFeePayCcyChanging(value);
					this.SendPropertyChanging();
					this._SetUpFeePayCcy = value;
					this.SendPropertyChanged("SetUpFeePayCcy");
					this.OnSetUpFeePayCcyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TS", AutoSync=AutoSync.Always, DbType="rowversion", IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary TS
		{
			get
			{
				return this._TS;
			}
			set
			{
				if ((this._TS != value))
				{
					this.OnTSChanging(value);
					this.SendPropertyChanging();
					this._TS = value;
					this.SendPropertyChanged("TS");
					this.OnTSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PotentialDilutionLevy", DbType="Bit", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<bool> PotentialDilutionLevy
		{
			get
			{
				return this._PotentialDilutionLevy;
			}
			set
			{
				if ((this._PotentialDilutionLevy != value))
				{
					this.OnPotentialDilutionLevyChanging(value);
					this.SendPropertyChanging();
					this._PotentialDilutionLevy = value;
					this.SendPropertyChanged("PotentialDilutionLevy");
					this.OnPotentialDilutionLevyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstSubscriptionDate", DbType="DateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> FirstSubscriptionDate
		{
			get
			{
				return this._FirstSubscriptionDate;
			}
			set
			{
				if ((this._FirstSubscriptionDate != value))
				{
					this.OnFirstSubscriptionDateChanging(value);
					this.SendPropertyChanging();
					this._FirstSubscriptionDate = value;
					this.SendPropertyChanged("FirstSubscriptionDate");
					this.OnFirstSubscriptionDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdvisedSale", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool AdvisedSale
		{
			get
			{
				return this._AdvisedSale;
			}
			set
			{
				if ((this._AdvisedSale != value))
				{
					this.OnAdvisedSaleChanging(value);
					this.SendPropertyChanging();
					this._AdvisedSale = value;
					this.SendPropertyChanged("AdvisedSale");
					this.OnAdvisedSaleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CloseAccount", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool CloseAccount
		{
			get
			{
				return this._CloseAccount;
			}
			set
			{
				if ((this._CloseAccount != value))
				{
					this.OnCloseAccountChanging(value);
					this.SendPropertyChanging();
					this._CloseAccount = value;
					this.SendPropertyChanged("CloseAccount");
					this.OnCloseAccountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DilutionLevyPayCcy", DbType="Decimal(19,4)", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> DilutionLevyPayCcy
		{
			get
			{
				return this._DilutionLevyPayCcy;
			}
			set
			{
				if ((this._DilutionLevyPayCcy != value))
				{
					this.OnDilutionLevyPayCcyChanging(value);
					this.SendPropertyChanging();
					this._DilutionLevyPayCcy = value;
					this.SendPropertyChanged("DilutionLevyPayCcy");
					this.OnDilutionLevyPayCcyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DilutionLevyDealCcy", DbType="Decimal(19,4)", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> DilutionLevyDealCcy
		{
			get
			{
				return this._DilutionLevyDealCcy;
			}
			set
			{
				if ((this._DilutionLevyDealCcy != value))
				{
					this.OnDilutionLevyDealCcyChanging(value);
					this.SendPropertyChanging();
					this._DilutionLevyDealCcy = value;
					this.SendPropertyChanged("DilutionLevyDealCcy");
					this.OnDilutionLevyDealCcyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdviserCharge", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool AdviserCharge
		{
			get
			{
				return this._AdviserCharge;
			}
			set
			{
				if ((this._AdviserCharge != value))
				{
					this.OnAdviserChargeChanging(value);
					this.SendPropertyChanging();
					this._AdviserCharge = value;
					this.SendPropertyChanged("AdviserCharge");
					this.OnAdviserChargeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FundHolderPlanID", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> FundHolderPlanID
		{
			get
			{
				return this._FundHolderPlanID;
			}
			set
			{
				if ((this._FundHolderPlanID != value))
				{
					this.OnFundHolderPlanIDChanging(value);
					this.SendPropertyChanging();
					this._FundHolderPlanID = value;
					this.SendPropertyChanged("FundHolderPlanID");
					this.OnFundHolderPlanIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="fndDeal_fndDeal", Storage="_fndDeals", ThisKey="DealID", OtherKey="CancellingDealID")]
		public EntitySet<fndDeal> fndDeals
		{
			get
			{
				return this._fndDeals;
			}
			set
			{
				this._fndDeals.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="fndDeal_fndDeal", Storage="_fndDeal1", ThisKey="CancellingDealID", OtherKey="DealID", IsForeignKey=true)]
		public fndDeal fndDeal1
		{
			get
			{
				return this._fndDeal1.Entity;
			}
			set
			{
				fndDeal previousValue = this._fndDeal1.Entity;
				if (((previousValue != value) 
							|| (this._fndDeal1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._fndDeal1.Entity = null;
						previousValue.fndDeals.Remove(this);
					}
					this._fndDeal1.Entity = value;
					if ((value != null))
					{
						value.fndDeals.Add(this);
						this._CancellingDealID = value.DealID;
					}
					else
					{
						this._CancellingDealID = default(Nullable<int>);
					}
					this.SendPropertyChanged("fndDeal1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_fndDeals(fndDeal entity)
		{
			this.SendPropertyChanging();
			entity.fndDeal1 = this;
		}
		
		private void detach_fndDeals(fndDeal entity)
		{
			this.SendPropertyChanging();
			entity.fndDeal1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EntityContact")]
	public partial class EntityContact : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ContactID;
		
		private int _EntityID;
		
		private string _ContactName;
		
		private string _TelephoneNo;
		
		private string _MobileNo;
		
		private string _FacsimileNo;
		
		private string _Email;
		
		private bool _OnlineAccess;
		
		private System.Nullable<bool> _AddToFavourite;
		
		private System.Nullable<int> _DialingCodeTel;
		
		private System.Nullable<int> _DialingCodeMobile;
		
		private System.Nullable<int> _DialingCodeFax;
		
		private string _Extension;
		
		private EntityRef<Entity> _Entity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnContactIDChanging(int value);
    partial void OnContactIDChanged();
    partial void OnEntityIDChanging(int value);
    partial void OnEntityIDChanged();
    partial void OnContactNameChanging(string value);
    partial void OnContactNameChanged();
    partial void OnTelephoneNoChanging(string value);
    partial void OnTelephoneNoChanged();
    partial void OnMobileNoChanging(string value);
    partial void OnMobileNoChanged();
    partial void OnFacsimileNoChanging(string value);
    partial void OnFacsimileNoChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnOnlineAccessChanging(bool value);
    partial void OnOnlineAccessChanged();
    partial void OnAddToFavouriteChanging(System.Nullable<bool> value);
    partial void OnAddToFavouriteChanged();
    partial void OnDialingCodeTelChanging(System.Nullable<int> value);
    partial void OnDialingCodeTelChanged();
    partial void OnDialingCodeMobileChanging(System.Nullable<int> value);
    partial void OnDialingCodeMobileChanged();
    partial void OnDialingCodeFaxChanging(System.Nullable<int> value);
    partial void OnDialingCodeFaxChanged();
    partial void OnExtensionChanging(string value);
    partial void OnExtensionChanged();
    #endregion
		
		public EntityContact()
		{
			this._Entity = default(EntityRef<Entity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ContactID
		{
			get
			{
				return this._ContactID;
			}
			set
			{
				if ((this._ContactID != value))
				{
					this.OnContactIDChanging(value);
					this.SendPropertyChanging();
					this._ContactID = value;
					this.SendPropertyChanged("ContactID");
					this.OnContactIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntityID", DbType="Int NOT NULL")]
		public int EntityID
		{
			get
			{
				return this._EntityID;
			}
			set
			{
				if ((this._EntityID != value))
				{
					if (this._Entity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEntityIDChanging(value);
					this.SendPropertyChanging();
					this._EntityID = value;
					this.SendPropertyChanged("EntityID");
					this.OnEntityIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ContactName
		{
			get
			{
				return this._ContactName;
			}
			set
			{
				if ((this._ContactName != value))
				{
					this.OnContactNameChanging(value);
					this.SendPropertyChanging();
					this._ContactName = value;
					this.SendPropertyChanged("ContactName");
					this.OnContactNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TelephoneNo", DbType="VarChar(20)")]
		public string TelephoneNo
		{
			get
			{
				return this._TelephoneNo;
			}
			set
			{
				if ((this._TelephoneNo != value))
				{
					this.OnTelephoneNoChanging(value);
					this.SendPropertyChanging();
					this._TelephoneNo = value;
					this.SendPropertyChanged("TelephoneNo");
					this.OnTelephoneNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MobileNo", DbType="VarChar(20)")]
		public string MobileNo
		{
			get
			{
				return this._MobileNo;
			}
			set
			{
				if ((this._MobileNo != value))
				{
					this.OnMobileNoChanging(value);
					this.SendPropertyChanging();
					this._MobileNo = value;
					this.SendPropertyChanged("MobileNo");
					this.OnMobileNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FacsimileNo", DbType="VarChar(20)")]
		public string FacsimileNo
		{
			get
			{
				return this._FacsimileNo;
			}
			set
			{
				if ((this._FacsimileNo != value))
				{
					this.OnFacsimileNoChanging(value);
					this.SendPropertyChanging();
					this._FacsimileNo = value;
					this.SendPropertyChanged("FacsimileNo");
					this.OnFacsimileNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(100)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OnlineAccess", DbType="Bit NOT NULL")]
		public bool OnlineAccess
		{
			get
			{
				return this._OnlineAccess;
			}
			set
			{
				if ((this._OnlineAccess != value))
				{
					this.OnOnlineAccessChanging(value);
					this.SendPropertyChanging();
					this._OnlineAccess = value;
					this.SendPropertyChanged("OnlineAccess");
					this.OnOnlineAccessChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddToFavourite", DbType="Bit")]
		public System.Nullable<bool> AddToFavourite
		{
			get
			{
				return this._AddToFavourite;
			}
			set
			{
				if ((this._AddToFavourite != value))
				{
					this.OnAddToFavouriteChanging(value);
					this.SendPropertyChanging();
					this._AddToFavourite = value;
					this.SendPropertyChanged("AddToFavourite");
					this.OnAddToFavouriteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DialingCodeTel", DbType="Int")]
		public System.Nullable<int> DialingCodeTel
		{
			get
			{
				return this._DialingCodeTel;
			}
			set
			{
				if ((this._DialingCodeTel != value))
				{
					this.OnDialingCodeTelChanging(value);
					this.SendPropertyChanging();
					this._DialingCodeTel = value;
					this.SendPropertyChanged("DialingCodeTel");
					this.OnDialingCodeTelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DialingCodeMobile", DbType="Int")]
		public System.Nullable<int> DialingCodeMobile
		{
			get
			{
				return this._DialingCodeMobile;
			}
			set
			{
				if ((this._DialingCodeMobile != value))
				{
					this.OnDialingCodeMobileChanging(value);
					this.SendPropertyChanging();
					this._DialingCodeMobile = value;
					this.SendPropertyChanged("DialingCodeMobile");
					this.OnDialingCodeMobileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DialingCodeFax", DbType="Int")]
		public System.Nullable<int> DialingCodeFax
		{
			get
			{
				return this._DialingCodeFax;
			}
			set
			{
				if ((this._DialingCodeFax != value))
				{
					this.OnDialingCodeFaxChanging(value);
					this.SendPropertyChanging();
					this._DialingCodeFax = value;
					this.SendPropertyChanged("DialingCodeFax");
					this.OnDialingCodeFaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Extension", DbType="NVarChar(10)")]
		public string Extension
		{
			get
			{
				return this._Extension;
			}
			set
			{
				if ((this._Extension != value))
				{
					this.OnExtensionChanging(value);
					this.SendPropertyChanging();
					this._Extension = value;
					this.SendPropertyChanged("Extension");
					this.OnExtensionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Entity_EntityContact", Storage="_Entity", ThisKey="EntityID", OtherKey="EntityID", IsForeignKey=true)]
		public Entity Entity
		{
			get
			{
				return this._Entity.Entity;
			}
			set
			{
				Entity previousValue = this._Entity.Entity;
				if (((previousValue != value) 
							|| (this._Entity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Entity.Entity = null;
						previousValue.EntityContacts.Remove(this);
					}
					this._Entity.Entity = value;
					if ((value != null))
					{
						value.EntityContacts.Add(this);
						this._EntityID = value.EntityID;
					}
					else
					{
						this._EntityID = default(int);
					}
					this.SendPropertyChanged("Entity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Entity")]
	public partial class Entity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _EntityID;
		
		private int _EntityTypeID;
		
		private System.Nullable<int> _EntitySubTypeID;
		
		private string _EntityKey;
		
		private System.Nullable<int> _StatusID;
		
		private char _RiskLevel;
		
		private System.Nullable<int> _RiskScore;
		
		private string _Warning;
		
		private System.Nullable<System.DateTime> _CreatedOn;
		
		private string _CreatedBy;
		
		private System.Nullable<System.DateTime> _AmendedOn;
		
		private string _AmendedBy;
		
		private System.Data.Linq.Binary _TS;
		
		private System.Nullable<int> _BaseCurrencyID;
		
		private System.Nullable<byte> _YearEndDay;
		
		private System.Nullable<byte> _YearEndMonth;
		
		private bool _IsManagingEntity;
		
		private System.Nullable<int> _ManagingEntityID;
		
		private System.Nullable<int> _NoOfASignatories;
		
		private System.Nullable<int> _NoOfBSignatories;
		
		private System.Nullable<int> _NoOfCSignatories;
		
		private string _PEPorHPI;
		
		private bool _ComplianceVerified;
		
		private bool _ExternallyBooksKept;
		
		private EntitySet<Association> _Associations;
		
		private EntitySet<Association> _Associations1;
		
		private EntitySet<EntityContact> _EntityContacts;
		
		private EntitySet<Entity> _Entities;
		
		private EntityRef<EntityClient> _EntityClient;
		
		private EntityRef<Entity> _Entity1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEntityIDChanging(int value);
    partial void OnEntityIDChanged();
    partial void OnEntityTypeIDChanging(int value);
    partial void OnEntityTypeIDChanged();
    partial void OnEntitySubTypeIDChanging(System.Nullable<int> value);
    partial void OnEntitySubTypeIDChanged();
    partial void OnEntityKeyChanging(string value);
    partial void OnEntityKeyChanged();
    partial void OnStatusIDChanging(System.Nullable<int> value);
    partial void OnStatusIDChanged();
    partial void OnRiskLevelChanging(char value);
    partial void OnRiskLevelChanged();
    partial void OnRiskScoreChanging(System.Nullable<int> value);
    partial void OnRiskScoreChanged();
    partial void OnWarningChanging(string value);
    partial void OnWarningChanged();
    partial void OnCreatedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedOnChanged();
    partial void OnCreatedByChanging(string value);
    partial void OnCreatedByChanged();
    partial void OnAmendedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnAmendedOnChanged();
    partial void OnAmendedByChanging(string value);
    partial void OnAmendedByChanged();
    partial void OnTSChanging(System.Data.Linq.Binary value);
    partial void OnTSChanged();
    partial void OnBaseCurrencyIDChanging(System.Nullable<int> value);
    partial void OnBaseCurrencyIDChanged();
    partial void OnYearEndDayChanging(System.Nullable<byte> value);
    partial void OnYearEndDayChanged();
    partial void OnYearEndMonthChanging(System.Nullable<byte> value);
    partial void OnYearEndMonthChanged();
    partial void OnIsManagingEntityChanging(bool value);
    partial void OnIsManagingEntityChanged();
    partial void OnManagingEntityIDChanging(System.Nullable<int> value);
    partial void OnManagingEntityIDChanged();
    partial void OnNoOfASignatoriesChanging(System.Nullable<int> value);
    partial void OnNoOfASignatoriesChanged();
    partial void OnNoOfBSignatoriesChanging(System.Nullable<int> value);
    partial void OnNoOfBSignatoriesChanged();
    partial void OnNoOfCSignatoriesChanging(System.Nullable<int> value);
    partial void OnNoOfCSignatoriesChanged();
    partial void OnPEPorHPIChanging(string value);
    partial void OnPEPorHPIChanged();
    partial void OnComplianceVerifiedChanging(bool value);
    partial void OnComplianceVerifiedChanged();
    partial void OnExternallyBooksKeptChanging(bool value);
    partial void OnExternallyBooksKeptChanged();
    #endregion
		
		public Entity()
		{
			this._Associations = new EntitySet<Association>(new Action<Association>(this.attach_Associations), new Action<Association>(this.detach_Associations));
			this._Associations1 = new EntitySet<Association>(new Action<Association>(this.attach_Associations1), new Action<Association>(this.detach_Associations1));
			this._EntityContacts = new EntitySet<EntityContact>(new Action<EntityContact>(this.attach_EntityContacts), new Action<EntityContact>(this.detach_EntityContacts));
			this._Entities = new EntitySet<Entity>(new Action<Entity>(this.attach_Entities), new Action<Entity>(this.detach_Entities));
			this._EntityClient = default(EntityRef<EntityClient>);
			this._Entity1 = default(EntityRef<Entity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntityID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public int EntityID
		{
			get
			{
				return this._EntityID;
			}
			set
			{
				if ((this._EntityID != value))
				{
					this.OnEntityIDChanging(value);
					this.SendPropertyChanging();
					this._EntityID = value;
					this.SendPropertyChanged("EntityID");
					this.OnEntityIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntityTypeID", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int EntityTypeID
		{
			get
			{
				return this._EntityTypeID;
			}
			set
			{
				if ((this._EntityTypeID != value))
				{
					this.OnEntityTypeIDChanging(value);
					this.SendPropertyChanging();
					this._EntityTypeID = value;
					this.SendPropertyChanged("EntityTypeID");
					this.OnEntityTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntitySubTypeID", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> EntitySubTypeID
		{
			get
			{
				return this._EntitySubTypeID;
			}
			set
			{
				if ((this._EntitySubTypeID != value))
				{
					this.OnEntitySubTypeIDChanging(value);
					this.SendPropertyChanging();
					this._EntitySubTypeID = value;
					this.SendPropertyChanged("EntitySubTypeID");
					this.OnEntitySubTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntityKey", DbType="VarChar(10) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string EntityKey
		{
			get
			{
				return this._EntityKey;
			}
			set
			{
				if ((this._EntityKey != value))
				{
					this.OnEntityKeyChanging(value);
					this.SendPropertyChanging();
					this._EntityKey = value;
					this.SendPropertyChanged("EntityKey");
					this.OnEntityKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatusID", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> StatusID
		{
			get
			{
				return this._StatusID;
			}
			set
			{
				if ((this._StatusID != value))
				{
					this.OnStatusIDChanging(value);
					this.SendPropertyChanging();
					this._StatusID = value;
					this.SendPropertyChanged("StatusID");
					this.OnStatusIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RiskLevel", DbType="Char(1) NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public char RiskLevel
		{
			get
			{
				return this._RiskLevel;
			}
			set
			{
				if ((this._RiskLevel != value))
				{
					this.OnRiskLevelChanging(value);
					this.SendPropertyChanging();
					this._RiskLevel = value;
					this.SendPropertyChanged("RiskLevel");
					this.OnRiskLevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RiskScore", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> RiskScore
		{
			get
			{
				return this._RiskScore;
			}
			set
			{
				if ((this._RiskScore != value))
				{
					this.OnRiskScoreChanging(value);
					this.SendPropertyChanging();
					this._RiskScore = value;
					this.SendPropertyChanged("RiskScore");
					this.OnRiskScoreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Warning", DbType="VarChar(100)", UpdateCheck=UpdateCheck.Never)]
		public string Warning
		{
			get
			{
				return this._Warning;
			}
			set
			{
				if ((this._Warning != value))
				{
					this.OnWarningChanging(value);
					this.SendPropertyChanging();
					this._Warning = value;
					this.SendPropertyChanged("Warning");
					this.OnWarningChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOn", DbType="DateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> CreatedOn
		{
			get
			{
				return this._CreatedOn;
			}
			set
			{
				if ((this._CreatedOn != value))
				{
					this.OnCreatedOnChanging(value);
					this.SendPropertyChanging();
					this._CreatedOn = value;
					this.SendPropertyChanged("CreatedOn");
					this.OnCreatedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="VarChar(30)", UpdateCheck=UpdateCheck.Never)]
		public string CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AmendedOn", DbType="DateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> AmendedOn
		{
			get
			{
				return this._AmendedOn;
			}
			set
			{
				if ((this._AmendedOn != value))
				{
					this.OnAmendedOnChanging(value);
					this.SendPropertyChanging();
					this._AmendedOn = value;
					this.SendPropertyChanged("AmendedOn");
					this.OnAmendedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AmendedBy", DbType="VarChar(30)", UpdateCheck=UpdateCheck.Never)]
		public string AmendedBy
		{
			get
			{
				return this._AmendedBy;
			}
			set
			{
				if ((this._AmendedBy != value))
				{
					this.OnAmendedByChanging(value);
					this.SendPropertyChanging();
					this._AmendedBy = value;
					this.SendPropertyChanged("AmendedBy");
					this.OnAmendedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TS", AutoSync=AutoSync.Always, DbType="rowversion", IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary TS
		{
			get
			{
				return this._TS;
			}
			set
			{
				if ((this._TS != value))
				{
					this.OnTSChanging(value);
					this.SendPropertyChanging();
					this._TS = value;
					this.SendPropertyChanged("TS");
					this.OnTSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BaseCurrencyID", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> BaseCurrencyID
		{
			get
			{
				return this._BaseCurrencyID;
			}
			set
			{
				if ((this._BaseCurrencyID != value))
				{
					this.OnBaseCurrencyIDChanging(value);
					this.SendPropertyChanging();
					this._BaseCurrencyID = value;
					this.SendPropertyChanged("BaseCurrencyID");
					this.OnBaseCurrencyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_YearEndDay", DbType="TinyInt", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<byte> YearEndDay
		{
			get
			{
				return this._YearEndDay;
			}
			set
			{
				if ((this._YearEndDay != value))
				{
					this.OnYearEndDayChanging(value);
					this.SendPropertyChanging();
					this._YearEndDay = value;
					this.SendPropertyChanged("YearEndDay");
					this.OnYearEndDayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_YearEndMonth", DbType="TinyInt", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<byte> YearEndMonth
		{
			get
			{
				return this._YearEndMonth;
			}
			set
			{
				if ((this._YearEndMonth != value))
				{
					this.OnYearEndMonthChanging(value);
					this.SendPropertyChanging();
					this._YearEndMonth = value;
					this.SendPropertyChanged("YearEndMonth");
					this.OnYearEndMonthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsManagingEntity", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool IsManagingEntity
		{
			get
			{
				return this._IsManagingEntity;
			}
			set
			{
				if ((this._IsManagingEntity != value))
				{
					this.OnIsManagingEntityChanging(value);
					this.SendPropertyChanging();
					this._IsManagingEntity = value;
					this.SendPropertyChanged("IsManagingEntity");
					this.OnIsManagingEntityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ManagingEntityID", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> ManagingEntityID
		{
			get
			{
				return this._ManagingEntityID;
			}
			set
			{
				if ((this._ManagingEntityID != value))
				{
					if (this._Entity1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnManagingEntityIDChanging(value);
					this.SendPropertyChanging();
					this._ManagingEntityID = value;
					this.SendPropertyChanged("ManagingEntityID");
					this.OnManagingEntityIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoOfASignatories", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> NoOfASignatories
		{
			get
			{
				return this._NoOfASignatories;
			}
			set
			{
				if ((this._NoOfASignatories != value))
				{
					this.OnNoOfASignatoriesChanging(value);
					this.SendPropertyChanging();
					this._NoOfASignatories = value;
					this.SendPropertyChanged("NoOfASignatories");
					this.OnNoOfASignatoriesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoOfBSignatories", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> NoOfBSignatories
		{
			get
			{
				return this._NoOfBSignatories;
			}
			set
			{
				if ((this._NoOfBSignatories != value))
				{
					this.OnNoOfBSignatoriesChanging(value);
					this.SendPropertyChanging();
					this._NoOfBSignatories = value;
					this.SendPropertyChanged("NoOfBSignatories");
					this.OnNoOfBSignatoriesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoOfCSignatories", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> NoOfCSignatories
		{
			get
			{
				return this._NoOfCSignatories;
			}
			set
			{
				if ((this._NoOfCSignatories != value))
				{
					this.OnNoOfCSignatoriesChanging(value);
					this.SendPropertyChanging();
					this._NoOfCSignatories = value;
					this.SendPropertyChanged("NoOfCSignatories");
					this.OnNoOfCSignatoriesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PEPorHPI", DbType="Char(3)", UpdateCheck=UpdateCheck.Never)]
		public string PEPorHPI
		{
			get
			{
				return this._PEPorHPI;
			}
			set
			{
				if ((this._PEPorHPI != value))
				{
					this.OnPEPorHPIChanging(value);
					this.SendPropertyChanging();
					this._PEPorHPI = value;
					this.SendPropertyChanged("PEPorHPI");
					this.OnPEPorHPIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ComplianceVerified", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool ComplianceVerified
		{
			get
			{
				return this._ComplianceVerified;
			}
			set
			{
				if ((this._ComplianceVerified != value))
				{
					this.OnComplianceVerifiedChanging(value);
					this.SendPropertyChanging();
					this._ComplianceVerified = value;
					this.SendPropertyChanged("ComplianceVerified");
					this.OnComplianceVerifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExternallyBooksKept", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool ExternallyBooksKept
		{
			get
			{
				return this._ExternallyBooksKept;
			}
			set
			{
				if ((this._ExternallyBooksKept != value))
				{
					this.OnExternallyBooksKeptChanging(value);
					this.SendPropertyChanging();
					this._ExternallyBooksKept = value;
					this.SendPropertyChanged("ExternallyBooksKept");
					this.OnExternallyBooksKeptChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Entity_Association", Storage="_Associations", ThisKey="EntityID", OtherKey="SourceEntityID")]
		public EntitySet<Association> Associations
		{
			get
			{
				return this._Associations;
			}
			set
			{
				this._Associations.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Entity_Association1", Storage="_Associations1", ThisKey="EntityID", OtherKey="TargetEntityID")]
		public EntitySet<Association> Associations1
		{
			get
			{
				return this._Associations1;
			}
			set
			{
				this._Associations1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Entity_EntityContact", Storage="_EntityContacts", ThisKey="EntityID", OtherKey="EntityID")]
		public EntitySet<EntityContact> EntityContacts
		{
			get
			{
				return this._EntityContacts;
			}
			set
			{
				this._EntityContacts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Entity_Entity", Storage="_Entities", ThisKey="EntityID", OtherKey="ManagingEntityID")]
		public EntitySet<Entity> Entities
		{
			get
			{
				return this._Entities;
			}
			set
			{
				this._Entities.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Entity_EntityClient", Storage="_EntityClient", ThisKey="EntityID", OtherKey="EntityID", IsUnique=true, IsForeignKey=false)]
		public EntityClient EntityClient
		{
			get
			{
				return this._EntityClient.Entity;
			}
			set
			{
				EntityClient previousValue = this._EntityClient.Entity;
				if (((previousValue != value) 
							|| (this._EntityClient.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EntityClient.Entity = null;
						previousValue.Entity = null;
					}
					this._EntityClient.Entity = value;
					if ((value != null))
					{
						value.Entity = this;
					}
					this.SendPropertyChanged("EntityClient");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Entity_Entity", Storage="_Entity1", ThisKey="ManagingEntityID", OtherKey="EntityID", IsForeignKey=true)]
		public Entity Entity1
		{
			get
			{
				return this._Entity1.Entity;
			}
			set
			{
				Entity previousValue = this._Entity1.Entity;
				if (((previousValue != value) 
							|| (this._Entity1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Entity1.Entity = null;
						previousValue.Entities.Remove(this);
					}
					this._Entity1.Entity = value;
					if ((value != null))
					{
						value.Entities.Add(this);
						this._ManagingEntityID = value.EntityID;
					}
					else
					{
						this._ManagingEntityID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Entity1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Associations(Association entity)
		{
			this.SendPropertyChanging();
			entity.Entity = this;
		}
		
		private void detach_Associations(Association entity)
		{
			this.SendPropertyChanging();
			entity.Entity = null;
		}
		
		private void attach_Associations1(Association entity)
		{
			this.SendPropertyChanging();
			entity.Entity1 = this;
		}
		
		private void detach_Associations1(Association entity)
		{
			this.SendPropertyChanging();
			entity.Entity1 = null;
		}
		
		private void attach_EntityContacts(EntityContact entity)
		{
			this.SendPropertyChanging();
			entity.Entity = this;
		}
		
		private void detach_EntityContacts(EntityContact entity)
		{
			this.SendPropertyChanging();
			entity.Entity = null;
		}
		
		private void attach_Entities(Entity entity)
		{
			this.SendPropertyChanging();
			entity.Entity1 = this;
		}
		
		private void detach_Entities(Entity entity)
		{
			this.SendPropertyChanging();
			entity.Entity1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EntityClient")]
	public partial class EntityClient : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _EntityID;
		
		private string _ShortName;
		
		private string _FullName;
		
		private System.Nullable<int> _JurisdictionID;
		
		private System.Nullable<System.DateTime> _FormationDate;
		
		private System.Nullable<int> _TeamID;
		
		private System.Nullable<bool> _ChargeableFlag;
		
		private System.Nullable<bool> _AdvaloremFlag;
		
		private System.Nullable<decimal> _AdvaloremPercent;
		
		private System.Nullable<decimal> _AdvaloremAmount;
		
		private System.Nullable<System.DateTime> _NextFeeBillingDate;
		
		private System.Nullable<System.DateTime> _LastFeeBillingDate;
		
		private System.Nullable<char> _BillingFrequency;
		
		private string _BillingLedger;
		
		private System.Nullable<bool> _MinFeesFlag;
		
		private System.Nullable<decimal> _MinFeesAmount;
		
		private System.Nullable<bool> _FixedFeeFlag;
		
		private System.Nullable<decimal> _FixedFeeAmount;
		
		private System.Nullable<int> _FeeDetailsID;
		
		private System.Nullable<System.DateTime> _OpenedDate;
		
		private string _OpenedBy;
		
		private System.Nullable<System.DateTime> _AccountsDate;
		
		private System.Nullable<System.DateTime> _TakeOnDate;
		
		private System.Nullable<System.DateTime> _ClosedDate;
		
		private string _ClosedBy;
		
		private string _RegisteredCompanyNum;
		
		private System.Nullable<int> _QuorumShareholders;
		
		private System.Nullable<int> _QuorumDirectors;
		
		private System.Nullable<int> _PurposeID;
		
		private System.Nullable<int> _FoundationCharterID;
		
		private System.Nullable<bool> _RegulationsFlag;
		
		private System.Nullable<int> _RegulationID;
		
		private System.Nullable<System.DateTime> _DeedDate;
		
		private System.Nullable<int> _DeedNameID;
		
		private string _BillingInfo;
		
		private string _TypeOfReturn;
		
		private System.Nullable<System.DateTime> _ReturnSendDate;
		
		private System.Nullable<System.DateTime> _ReturnReminderDate;
		
		private System.Nullable<System.DateTime> _ReturnFiledDate;
		
		private System.Nullable<int> _TaxStatus;
		
		private System.Nullable<System.DateTime> _PerpetuityDate;
		
		private string _PerpetuityPeriod;
		
		private System.Nullable<int> _ProperLawID;
		
		private System.Nullable<System.DateTime> _ProperLawDate;
		
		private System.Nullable<int> _BankNameID;
		
		private string _SortCode;
		
		private string _BIC;
		
		private string _ABANumber;
		
		private string _LocalCode;
		
		private System.Nullable<System.DateTime> _AnnualReturnDate;
		
		private System.Nullable<int> _AssociatedEntityID;
		
		private EntityRef<Entity> _Entity;
		
		private EntityRef<Purpose> _Purpose;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEntityIDChanging(int value);
    partial void OnEntityIDChanged();
    partial void OnShortNameChanging(string value);
    partial void OnShortNameChanged();
    partial void OnFullNameChanging(string value);
    partial void OnFullNameChanged();
    partial void OnJurisdictionIDChanging(System.Nullable<int> value);
    partial void OnJurisdictionIDChanged();
    partial void OnFormationDateChanging(System.Nullable<System.DateTime> value);
    partial void OnFormationDateChanged();
    partial void OnTeamIDChanging(System.Nullable<int> value);
    partial void OnTeamIDChanged();
    partial void OnChargeableFlagChanging(System.Nullable<bool> value);
    partial void OnChargeableFlagChanged();
    partial void OnAdvaloremFlagChanging(System.Nullable<bool> value);
    partial void OnAdvaloremFlagChanged();
    partial void OnAdvaloremPercentChanging(System.Nullable<decimal> value);
    partial void OnAdvaloremPercentChanged();
    partial void OnAdvaloremAmountChanging(System.Nullable<decimal> value);
    partial void OnAdvaloremAmountChanged();
    partial void OnNextFeeBillingDateChanging(System.Nullable<System.DateTime> value);
    partial void OnNextFeeBillingDateChanged();
    partial void OnLastFeeBillingDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastFeeBillingDateChanged();
    partial void OnBillingFrequencyChanging(System.Nullable<char> value);
    partial void OnBillingFrequencyChanged();
    partial void OnBillingLedgerChanging(string value);
    partial void OnBillingLedgerChanged();
    partial void OnMinFeesFlagChanging(System.Nullable<bool> value);
    partial void OnMinFeesFlagChanged();
    partial void OnMinFeesAmountChanging(System.Nullable<decimal> value);
    partial void OnMinFeesAmountChanged();
    partial void OnFixedFeeFlagChanging(System.Nullable<bool> value);
    partial void OnFixedFeeFlagChanged();
    partial void OnFixedFeeAmountChanging(System.Nullable<decimal> value);
    partial void OnFixedFeeAmountChanged();
    partial void OnFeeDetailsIDChanging(System.Nullable<int> value);
    partial void OnFeeDetailsIDChanged();
    partial void OnOpenedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnOpenedDateChanged();
    partial void OnOpenedByChanging(string value);
    partial void OnOpenedByChanged();
    partial void OnAccountsDateChanging(System.Nullable<System.DateTime> value);
    partial void OnAccountsDateChanged();
    partial void OnTakeOnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnTakeOnDateChanged();
    partial void OnClosedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnClosedDateChanged();
    partial void OnClosedByChanging(string value);
    partial void OnClosedByChanged();
    partial void OnRegisteredCompanyNumChanging(string value);
    partial void OnRegisteredCompanyNumChanged();
    partial void OnQuorumShareholdersChanging(System.Nullable<int> value);
    partial void OnQuorumShareholdersChanged();
    partial void OnQuorumDirectorsChanging(System.Nullable<int> value);
    partial void OnQuorumDirectorsChanged();
    partial void OnPurposeIDChanging(System.Nullable<int> value);
    partial void OnPurposeIDChanged();
    partial void OnFoundationCharterIDChanging(System.Nullable<int> value);
    partial void OnFoundationCharterIDChanged();
    partial void OnRegulationsFlagChanging(System.Nullable<bool> value);
    partial void OnRegulationsFlagChanged();
    partial void OnRegulationIDChanging(System.Nullable<int> value);
    partial void OnRegulationIDChanged();
    partial void OnDeedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDeedDateChanged();
    partial void OnDeedNameIDChanging(System.Nullable<int> value);
    partial void OnDeedNameIDChanged();
    partial void OnBillingInfoChanging(string value);
    partial void OnBillingInfoChanged();
    partial void OnTypeOfReturnChanging(string value);
    partial void OnTypeOfReturnChanged();
    partial void OnReturnSendDateChanging(System.Nullable<System.DateTime> value);
    partial void OnReturnSendDateChanged();
    partial void OnReturnReminderDateChanging(System.Nullable<System.DateTime> value);
    partial void OnReturnReminderDateChanged();
    partial void OnReturnFiledDateChanging(System.Nullable<System.DateTime> value);
    partial void OnReturnFiledDateChanged();
    partial void OnTaxStatusChanging(System.Nullable<int> value);
    partial void OnTaxStatusChanged();
    partial void OnPerpetuityDateChanging(System.Nullable<System.DateTime> value);
    partial void OnPerpetuityDateChanged();
    partial void OnPerpetuityPeriodChanging(string value);
    partial void OnPerpetuityPeriodChanged();
    partial void OnProperLawIDChanging(System.Nullable<int> value);
    partial void OnProperLawIDChanged();
    partial void OnProperLawDateChanging(System.Nullable<System.DateTime> value);
    partial void OnProperLawDateChanged();
    partial void OnBankNameIDChanging(System.Nullable<int> value);
    partial void OnBankNameIDChanged();
    partial void OnSortCodeChanging(string value);
    partial void OnSortCodeChanged();
    partial void OnBICChanging(string value);
    partial void OnBICChanged();
    partial void OnABANumberChanging(string value);
    partial void OnABANumberChanged();
    partial void OnLocalCodeChanging(string value);
    partial void OnLocalCodeChanged();
    partial void OnAnnualReturnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnAnnualReturnDateChanged();
    partial void OnAssociatedEntityIDChanging(System.Nullable<int> value);
    partial void OnAssociatedEntityIDChanged();
    #endregion
		
		public EntityClient()
		{
			this._Entity = default(EntityRef<Entity>);
			this._Purpose = default(EntityRef<Purpose>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntityID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int EntityID
		{
			get
			{
				return this._EntityID;
			}
			set
			{
				if ((this._EntityID != value))
				{
					if (this._Entity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEntityIDChanging(value);
					this.SendPropertyChanging();
					this._EntityID = value;
					this.SendPropertyChanged("EntityID");
					this.OnEntityIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShortName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string ShortName
		{
			get
			{
				return this._ShortName;
			}
			set
			{
				if ((this._ShortName != value))
				{
					this.OnShortNameChanging(value);
					this.SendPropertyChanging();
					this._ShortName = value;
					this.SendPropertyChanged("ShortName");
					this.OnShortNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FullName", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string FullName
		{
			get
			{
				return this._FullName;
			}
			set
			{
				if ((this._FullName != value))
				{
					this.OnFullNameChanging(value);
					this.SendPropertyChanging();
					this._FullName = value;
					this.SendPropertyChanged("FullName");
					this.OnFullNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JurisdictionID", DbType="Int")]
		public System.Nullable<int> JurisdictionID
		{
			get
			{
				return this._JurisdictionID;
			}
			set
			{
				if ((this._JurisdictionID != value))
				{
					this.OnJurisdictionIDChanging(value);
					this.SendPropertyChanging();
					this._JurisdictionID = value;
					this.SendPropertyChanged("JurisdictionID");
					this.OnJurisdictionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FormationDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> FormationDate
		{
			get
			{
				return this._FormationDate;
			}
			set
			{
				if ((this._FormationDate != value))
				{
					this.OnFormationDateChanging(value);
					this.SendPropertyChanging();
					this._FormationDate = value;
					this.SendPropertyChanged("FormationDate");
					this.OnFormationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TeamID", DbType="Int")]
		public System.Nullable<int> TeamID
		{
			get
			{
				return this._TeamID;
			}
			set
			{
				if ((this._TeamID != value))
				{
					this.OnTeamIDChanging(value);
					this.SendPropertyChanging();
					this._TeamID = value;
					this.SendPropertyChanged("TeamID");
					this.OnTeamIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChargeableFlag", DbType="Bit")]
		public System.Nullable<bool> ChargeableFlag
		{
			get
			{
				return this._ChargeableFlag;
			}
			set
			{
				if ((this._ChargeableFlag != value))
				{
					this.OnChargeableFlagChanging(value);
					this.SendPropertyChanging();
					this._ChargeableFlag = value;
					this.SendPropertyChanged("ChargeableFlag");
					this.OnChargeableFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdvaloremFlag", DbType="Bit")]
		public System.Nullable<bool> AdvaloremFlag
		{
			get
			{
				return this._AdvaloremFlag;
			}
			set
			{
				if ((this._AdvaloremFlag != value))
				{
					this.OnAdvaloremFlagChanging(value);
					this.SendPropertyChanging();
					this._AdvaloremFlag = value;
					this.SendPropertyChanged("AdvaloremFlag");
					this.OnAdvaloremFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdvaloremPercent", DbType="SmallMoney")]
		public System.Nullable<decimal> AdvaloremPercent
		{
			get
			{
				return this._AdvaloremPercent;
			}
			set
			{
				if ((this._AdvaloremPercent != value))
				{
					this.OnAdvaloremPercentChanging(value);
					this.SendPropertyChanging();
					this._AdvaloremPercent = value;
					this.SendPropertyChanged("AdvaloremPercent");
					this.OnAdvaloremPercentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdvaloremAmount", DbType="Money")]
		public System.Nullable<decimal> AdvaloremAmount
		{
			get
			{
				return this._AdvaloremAmount;
			}
			set
			{
				if ((this._AdvaloremAmount != value))
				{
					this.OnAdvaloremAmountChanging(value);
					this.SendPropertyChanging();
					this._AdvaloremAmount = value;
					this.SendPropertyChanged("AdvaloremAmount");
					this.OnAdvaloremAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NextFeeBillingDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> NextFeeBillingDate
		{
			get
			{
				return this._NextFeeBillingDate;
			}
			set
			{
				if ((this._NextFeeBillingDate != value))
				{
					this.OnNextFeeBillingDateChanging(value);
					this.SendPropertyChanging();
					this._NextFeeBillingDate = value;
					this.SendPropertyChanged("NextFeeBillingDate");
					this.OnNextFeeBillingDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastFeeBillingDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastFeeBillingDate
		{
			get
			{
				return this._LastFeeBillingDate;
			}
			set
			{
				if ((this._LastFeeBillingDate != value))
				{
					this.OnLastFeeBillingDateChanging(value);
					this.SendPropertyChanging();
					this._LastFeeBillingDate = value;
					this.SendPropertyChanged("LastFeeBillingDate");
					this.OnLastFeeBillingDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BillingFrequency", DbType="Char(1)")]
		public System.Nullable<char> BillingFrequency
		{
			get
			{
				return this._BillingFrequency;
			}
			set
			{
				if ((this._BillingFrequency != value))
				{
					this.OnBillingFrequencyChanging(value);
					this.SendPropertyChanging();
					this._BillingFrequency = value;
					this.SendPropertyChanged("BillingFrequency");
					this.OnBillingFrequencyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BillingLedger", DbType="VarChar(50)")]
		public string BillingLedger
		{
			get
			{
				return this._BillingLedger;
			}
			set
			{
				if ((this._BillingLedger != value))
				{
					this.OnBillingLedgerChanging(value);
					this.SendPropertyChanging();
					this._BillingLedger = value;
					this.SendPropertyChanged("BillingLedger");
					this.OnBillingLedgerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MinFeesFlag", DbType="Bit")]
		public System.Nullable<bool> MinFeesFlag
		{
			get
			{
				return this._MinFeesFlag;
			}
			set
			{
				if ((this._MinFeesFlag != value))
				{
					this.OnMinFeesFlagChanging(value);
					this.SendPropertyChanging();
					this._MinFeesFlag = value;
					this.SendPropertyChanged("MinFeesFlag");
					this.OnMinFeesFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MinFeesAmount", DbType="Money")]
		public System.Nullable<decimal> MinFeesAmount
		{
			get
			{
				return this._MinFeesAmount;
			}
			set
			{
				if ((this._MinFeesAmount != value))
				{
					this.OnMinFeesAmountChanging(value);
					this.SendPropertyChanging();
					this._MinFeesAmount = value;
					this.SendPropertyChanged("MinFeesAmount");
					this.OnMinFeesAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FixedFeeFlag", DbType="Bit")]
		public System.Nullable<bool> FixedFeeFlag
		{
			get
			{
				return this._FixedFeeFlag;
			}
			set
			{
				if ((this._FixedFeeFlag != value))
				{
					this.OnFixedFeeFlagChanging(value);
					this.SendPropertyChanging();
					this._FixedFeeFlag = value;
					this.SendPropertyChanged("FixedFeeFlag");
					this.OnFixedFeeFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FixedFeeAmount", DbType="Money")]
		public System.Nullable<decimal> FixedFeeAmount
		{
			get
			{
				return this._FixedFeeAmount;
			}
			set
			{
				if ((this._FixedFeeAmount != value))
				{
					this.OnFixedFeeAmountChanging(value);
					this.SendPropertyChanging();
					this._FixedFeeAmount = value;
					this.SendPropertyChanged("FixedFeeAmount");
					this.OnFixedFeeAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FeeDetailsID", DbType="Int")]
		public System.Nullable<int> FeeDetailsID
		{
			get
			{
				return this._FeeDetailsID;
			}
			set
			{
				if ((this._FeeDetailsID != value))
				{
					this.OnFeeDetailsIDChanging(value);
					this.SendPropertyChanging();
					this._FeeDetailsID = value;
					this.SendPropertyChanged("FeeDetailsID");
					this.OnFeeDetailsIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OpenedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> OpenedDate
		{
			get
			{
				return this._OpenedDate;
			}
			set
			{
				if ((this._OpenedDate != value))
				{
					this.OnOpenedDateChanging(value);
					this.SendPropertyChanging();
					this._OpenedDate = value;
					this.SendPropertyChanged("OpenedDate");
					this.OnOpenedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OpenedBy", DbType="VarChar(30)")]
		public string OpenedBy
		{
			get
			{
				return this._OpenedBy;
			}
			set
			{
				if ((this._OpenedBy != value))
				{
					this.OnOpenedByChanging(value);
					this.SendPropertyChanging();
					this._OpenedBy = value;
					this.SendPropertyChanged("OpenedBy");
					this.OnOpenedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountsDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> AccountsDate
		{
			get
			{
				return this._AccountsDate;
			}
			set
			{
				if ((this._AccountsDate != value))
				{
					this.OnAccountsDateChanging(value);
					this.SendPropertyChanging();
					this._AccountsDate = value;
					this.SendPropertyChanged("AccountsDate");
					this.OnAccountsDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TakeOnDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> TakeOnDate
		{
			get
			{
				return this._TakeOnDate;
			}
			set
			{
				if ((this._TakeOnDate != value))
				{
					this.OnTakeOnDateChanging(value);
					this.SendPropertyChanging();
					this._TakeOnDate = value;
					this.SendPropertyChanged("TakeOnDate");
					this.OnTakeOnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClosedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ClosedDate
		{
			get
			{
				return this._ClosedDate;
			}
			set
			{
				if ((this._ClosedDate != value))
				{
					this.OnClosedDateChanging(value);
					this.SendPropertyChanging();
					this._ClosedDate = value;
					this.SendPropertyChanged("ClosedDate");
					this.OnClosedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClosedBy", DbType="VarChar(30)")]
		public string ClosedBy
		{
			get
			{
				return this._ClosedBy;
			}
			set
			{
				if ((this._ClosedBy != value))
				{
					this.OnClosedByChanging(value);
					this.SendPropertyChanging();
					this._ClosedBy = value;
					this.SendPropertyChanged("ClosedBy");
					this.OnClosedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegisteredCompanyNum", DbType="VarChar(20)")]
		public string RegisteredCompanyNum
		{
			get
			{
				return this._RegisteredCompanyNum;
			}
			set
			{
				if ((this._RegisteredCompanyNum != value))
				{
					this.OnRegisteredCompanyNumChanging(value);
					this.SendPropertyChanging();
					this._RegisteredCompanyNum = value;
					this.SendPropertyChanged("RegisteredCompanyNum");
					this.OnRegisteredCompanyNumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuorumShareholders", DbType="Int")]
		public System.Nullable<int> QuorumShareholders
		{
			get
			{
				return this._QuorumShareholders;
			}
			set
			{
				if ((this._QuorumShareholders != value))
				{
					this.OnQuorumShareholdersChanging(value);
					this.SendPropertyChanging();
					this._QuorumShareholders = value;
					this.SendPropertyChanged("QuorumShareholders");
					this.OnQuorumShareholdersChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuorumDirectors", DbType="Int")]
		public System.Nullable<int> QuorumDirectors
		{
			get
			{
				return this._QuorumDirectors;
			}
			set
			{
				if ((this._QuorumDirectors != value))
				{
					this.OnQuorumDirectorsChanging(value);
					this.SendPropertyChanging();
					this._QuorumDirectors = value;
					this.SendPropertyChanged("QuorumDirectors");
					this.OnQuorumDirectorsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PurposeID", DbType="Int")]
		public System.Nullable<int> PurposeID
		{
			get
			{
				return this._PurposeID;
			}
			set
			{
				if ((this._PurposeID != value))
				{
					if (this._Purpose.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPurposeIDChanging(value);
					this.SendPropertyChanging();
					this._PurposeID = value;
					this.SendPropertyChanged("PurposeID");
					this.OnPurposeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FoundationCharterID", DbType="Int")]
		public System.Nullable<int> FoundationCharterID
		{
			get
			{
				return this._FoundationCharterID;
			}
			set
			{
				if ((this._FoundationCharterID != value))
				{
					this.OnFoundationCharterIDChanging(value);
					this.SendPropertyChanging();
					this._FoundationCharterID = value;
					this.SendPropertyChanged("FoundationCharterID");
					this.OnFoundationCharterIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegulationsFlag", DbType="Bit")]
		public System.Nullable<bool> RegulationsFlag
		{
			get
			{
				return this._RegulationsFlag;
			}
			set
			{
				if ((this._RegulationsFlag != value))
				{
					this.OnRegulationsFlagChanging(value);
					this.SendPropertyChanging();
					this._RegulationsFlag = value;
					this.SendPropertyChanged("RegulationsFlag");
					this.OnRegulationsFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegulationID", DbType="Int")]
		public System.Nullable<int> RegulationID
		{
			get
			{
				return this._RegulationID;
			}
			set
			{
				if ((this._RegulationID != value))
				{
					this.OnRegulationIDChanging(value);
					this.SendPropertyChanging();
					this._RegulationID = value;
					this.SendPropertyChanged("RegulationID");
					this.OnRegulationIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> DeedDate
		{
			get
			{
				return this._DeedDate;
			}
			set
			{
				if ((this._DeedDate != value))
				{
					this.OnDeedDateChanging(value);
					this.SendPropertyChanging();
					this._DeedDate = value;
					this.SendPropertyChanged("DeedDate");
					this.OnDeedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeedNameID", DbType="Int")]
		public System.Nullable<int> DeedNameID
		{
			get
			{
				return this._DeedNameID;
			}
			set
			{
				if ((this._DeedNameID != value))
				{
					this.OnDeedNameIDChanging(value);
					this.SendPropertyChanging();
					this._DeedNameID = value;
					this.SendPropertyChanged("DeedNameID");
					this.OnDeedNameIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BillingInfo", DbType="VarChar(100)")]
		public string BillingInfo
		{
			get
			{
				return this._BillingInfo;
			}
			set
			{
				if ((this._BillingInfo != value))
				{
					this.OnBillingInfoChanging(value);
					this.SendPropertyChanging();
					this._BillingInfo = value;
					this.SendPropertyChanged("BillingInfo");
					this.OnBillingInfoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeOfReturn", DbType="VarChar(50)")]
		public string TypeOfReturn
		{
			get
			{
				return this._TypeOfReturn;
			}
			set
			{
				if ((this._TypeOfReturn != value))
				{
					this.OnTypeOfReturnChanging(value);
					this.SendPropertyChanging();
					this._TypeOfReturn = value;
					this.SendPropertyChanged("TypeOfReturn");
					this.OnTypeOfReturnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReturnSendDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ReturnSendDate
		{
			get
			{
				return this._ReturnSendDate;
			}
			set
			{
				if ((this._ReturnSendDate != value))
				{
					this.OnReturnSendDateChanging(value);
					this.SendPropertyChanging();
					this._ReturnSendDate = value;
					this.SendPropertyChanged("ReturnSendDate");
					this.OnReturnSendDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReturnReminderDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ReturnReminderDate
		{
			get
			{
				return this._ReturnReminderDate;
			}
			set
			{
				if ((this._ReturnReminderDate != value))
				{
					this.OnReturnReminderDateChanging(value);
					this.SendPropertyChanging();
					this._ReturnReminderDate = value;
					this.SendPropertyChanged("ReturnReminderDate");
					this.OnReturnReminderDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReturnFiledDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ReturnFiledDate
		{
			get
			{
				return this._ReturnFiledDate;
			}
			set
			{
				if ((this._ReturnFiledDate != value))
				{
					this.OnReturnFiledDateChanging(value);
					this.SendPropertyChanging();
					this._ReturnFiledDate = value;
					this.SendPropertyChanged("ReturnFiledDate");
					this.OnReturnFiledDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaxStatus", DbType="Int")]
		public System.Nullable<int> TaxStatus
		{
			get
			{
				return this._TaxStatus;
			}
			set
			{
				if ((this._TaxStatus != value))
				{
					this.OnTaxStatusChanging(value);
					this.SendPropertyChanging();
					this._TaxStatus = value;
					this.SendPropertyChanged("TaxStatus");
					this.OnTaxStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PerpetuityDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> PerpetuityDate
		{
			get
			{
				return this._PerpetuityDate;
			}
			set
			{
				if ((this._PerpetuityDate != value))
				{
					this.OnPerpetuityDateChanging(value);
					this.SendPropertyChanging();
					this._PerpetuityDate = value;
					this.SendPropertyChanged("PerpetuityDate");
					this.OnPerpetuityDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PerpetuityPeriod", DbType="VarChar(50)")]
		public string PerpetuityPeriod
		{
			get
			{
				return this._PerpetuityPeriod;
			}
			set
			{
				if ((this._PerpetuityPeriod != value))
				{
					this.OnPerpetuityPeriodChanging(value);
					this.SendPropertyChanging();
					this._PerpetuityPeriod = value;
					this.SendPropertyChanged("PerpetuityPeriod");
					this.OnPerpetuityPeriodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProperLawID", DbType="Int")]
		public System.Nullable<int> ProperLawID
		{
			get
			{
				return this._ProperLawID;
			}
			set
			{
				if ((this._ProperLawID != value))
				{
					this.OnProperLawIDChanging(value);
					this.SendPropertyChanging();
					this._ProperLawID = value;
					this.SendPropertyChanged("ProperLawID");
					this.OnProperLawIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProperLawDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ProperLawDate
		{
			get
			{
				return this._ProperLawDate;
			}
			set
			{
				if ((this._ProperLawDate != value))
				{
					this.OnProperLawDateChanging(value);
					this.SendPropertyChanging();
					this._ProperLawDate = value;
					this.SendPropertyChanged("ProperLawDate");
					this.OnProperLawDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankNameID", DbType="Int")]
		public System.Nullable<int> BankNameID
		{
			get
			{
				return this._BankNameID;
			}
			set
			{
				if ((this._BankNameID != value))
				{
					this.OnBankNameIDChanging(value);
					this.SendPropertyChanging();
					this._BankNameID = value;
					this.SendPropertyChanged("BankNameID");
					this.OnBankNameIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortCode", DbType="VarChar(6)")]
		public string SortCode
		{
			get
			{
				return this._SortCode;
			}
			set
			{
				if ((this._SortCode != value))
				{
					this.OnSortCodeChanging(value);
					this.SendPropertyChanging();
					this._SortCode = value;
					this.SendPropertyChanged("SortCode");
					this.OnSortCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BIC", DbType="VarChar(11)")]
		public string BIC
		{
			get
			{
				return this._BIC;
			}
			set
			{
				if ((this._BIC != value))
				{
					this.OnBICChanging(value);
					this.SendPropertyChanging();
					this._BIC = value;
					this.SendPropertyChanged("BIC");
					this.OnBICChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ABANumber", DbType="VarChar(9)")]
		public string ABANumber
		{
			get
			{
				return this._ABANumber;
			}
			set
			{
				if ((this._ABANumber != value))
				{
					this.OnABANumberChanging(value);
					this.SendPropertyChanging();
					this._ABANumber = value;
					this.SendPropertyChanged("ABANumber");
					this.OnABANumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LocalCode", DbType="VarChar(50)")]
		public string LocalCode
		{
			get
			{
				return this._LocalCode;
			}
			set
			{
				if ((this._LocalCode != value))
				{
					this.OnLocalCodeChanging(value);
					this.SendPropertyChanging();
					this._LocalCode = value;
					this.SendPropertyChanged("LocalCode");
					this.OnLocalCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnnualReturnDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> AnnualReturnDate
		{
			get
			{
				return this._AnnualReturnDate;
			}
			set
			{
				if ((this._AnnualReturnDate != value))
				{
					this.OnAnnualReturnDateChanging(value);
					this.SendPropertyChanging();
					this._AnnualReturnDate = value;
					this.SendPropertyChanged("AnnualReturnDate");
					this.OnAnnualReturnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssociatedEntityID", DbType="Int")]
		public System.Nullable<int> AssociatedEntityID
		{
			get
			{
				return this._AssociatedEntityID;
			}
			set
			{
				if ((this._AssociatedEntityID != value))
				{
					this.OnAssociatedEntityIDChanging(value);
					this.SendPropertyChanging();
					this._AssociatedEntityID = value;
					this.SendPropertyChanged("AssociatedEntityID");
					this.OnAssociatedEntityIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Entity_EntityClient", Storage="_Entity", ThisKey="EntityID", OtherKey="EntityID", IsForeignKey=true)]
		public Entity Entity
		{
			get
			{
				return this._Entity.Entity;
			}
			set
			{
				Entity previousValue = this._Entity.Entity;
				if (((previousValue != value) 
							|| (this._Entity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Entity.Entity = null;
						previousValue.EntityClient = null;
					}
					this._Entity.Entity = value;
					if ((value != null))
					{
						value.EntityClient = this;
						this._EntityID = value.EntityID;
					}
					else
					{
						this._EntityID = default(int);
					}
					this.SendPropertyChanged("Entity");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Purpose_EntityClient", Storage="_Purpose", ThisKey="PurposeID", OtherKey="PurposeID", IsForeignKey=true)]
		public Purpose Purpose
		{
			get
			{
				return this._Purpose.Entity;
			}
			set
			{
				Purpose previousValue = this._Purpose.Entity;
				if (((previousValue != value) 
							|| (this._Purpose.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Purpose.Entity = null;
						previousValue.EntityClients.Remove(this);
					}
					this._Purpose.Entity = value;
					if ((value != null))
					{
						value.EntityClients.Add(this);
						this._PurposeID = value.PurposeID;
					}
					else
					{
						this._PurposeID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Purpose");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Purpose")]
	public partial class Purpose : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PurposeID;
		
		private string _Description;
		
		private char _StatusFlag;
		
		private System.Data.Linq.Binary _TS;
		
		private EntitySet<EntityClient> _EntityClients;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPurposeIDChanging(int value);
    partial void OnPurposeIDChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnStatusFlagChanging(char value);
    partial void OnStatusFlagChanged();
    partial void OnTSChanging(System.Data.Linq.Binary value);
    partial void OnTSChanged();
    #endregion
		
		public Purpose()
		{
			this._EntityClients = new EntitySet<EntityClient>(new Action<EntityClient>(this.attach_EntityClients), new Action<EntityClient>(this.detach_EntityClients));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PurposeID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public int PurposeID
		{
			get
			{
				return this._PurposeID;
			}
			set
			{
				if ((this._PurposeID != value))
				{
					this.OnPurposeIDChanging(value);
					this.SendPropertyChanging();
					this._PurposeID = value;
					this.SendPropertyChanged("PurposeID");
					this.OnPurposeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(255) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatusFlag", DbType="Char(1) NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public char StatusFlag
		{
			get
			{
				return this._StatusFlag;
			}
			set
			{
				if ((this._StatusFlag != value))
				{
					this.OnStatusFlagChanging(value);
					this.SendPropertyChanging();
					this._StatusFlag = value;
					this.SendPropertyChanged("StatusFlag");
					this.OnStatusFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TS", AutoSync=AutoSync.Always, DbType="rowversion", IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary TS
		{
			get
			{
				return this._TS;
			}
			set
			{
				if ((this._TS != value))
				{
					this.OnTSChanging(value);
					this.SendPropertyChanging();
					this._TS = value;
					this.SendPropertyChanged("TS");
					this.OnTSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Purpose_EntityClient", Storage="_EntityClients", ThisKey="PurposeID", OtherKey="PurposeID")]
		public EntitySet<EntityClient> EntityClients
		{
			get
			{
				return this._EntityClients;
			}
			set
			{
				this._EntityClients.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_EntityClients(EntityClient entity)
		{
			this.SendPropertyChanging();
			entity.Purpose = this;
		}
		
		private void detach_EntityClients(EntityClient entity)
		{
			this.SendPropertyChanging();
			entity.Purpose = null;
		}
	}
}
#pragma warning restore 1591
